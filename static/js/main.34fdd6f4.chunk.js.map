{"version":3,"sources":["components/EnhancedTableToolbar.tsx","components/CustomTable.tsx","img/construction-black-24dp.svg","img/calculate-black-24dp.svg","components/CustomizedSteppers.tsx","components/CustomTooltip.tsx","config.ts","redux/actions/models.ts","types.ts","redux/actions/steps.ts","styles.ts","pages/Models.tsx","pages/PowerBI.tsx","redux/actions/schemes.ts","pages/Schemes.tsx","redux/actions/wishes.ts","pages/Wishes.tsx","redux/actions/purchase.tsx","pages/Purchase.tsx","redux/actions/production.ts","pages/Production.tsx","pages/Launch.tsx","redux/actions/products.ts","pages/SchemesWishes.tsx","App.tsx","redux/reducers/models.ts","redux/reducers/schemes.ts","redux/reducers/wishes.ts","redux/reducers/purchase.tsx","redux/reducers/production.ts","redux/reducers/products.ts","redux/reducers/steps.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["useToolbarStyles","makeStyles","theme","createStyles","root","paddingLeft","spacing","paddingRight","title","flex","upload","display","EnhancedTableToolbar","classes","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Toolbar","className","Tooltip","to","IconButton","aria-label","onClick","e","currentTarget","aria-controls","aria-haspopup","Menu","id","keepMounted","onClose","TransitionComponent","Fade","type","accept","htmlFor","MenuItem","useStyles","width","maxWidth","margin","container","maxHeight","height","row","cursor","header","fontWeight","pagination","backgroundColor","color","textField","useTextField","underline","borderBottom","CustomTable","rows","columns","link","hover","classesTextField","React","page","setPage","rowsPerPage","setRowsPerPage","history","useHistory","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","key","align","style","minWidth","label","TableBody","slice","role","tabIndex","pathname","location","test","push","handleRowClick","undefined","index","value","editable","TextField","defaultValue","onChange","name","target","handleChangeTextField","InputProps","format","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","transform","x","y","d","_ref","svgRef","props","enableBackground","viewBox","ref","ForwardRef","forwardRef","ColorlibConnector","withStyles","alternativeLabel","top","active","completed","line","border","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","justifyContent","alignItems","boxShadow","CustomizedSteppers","activeStep","useSelector","steps","step","ColorlibStepIcon","icons","1","2","3","4","SvgIcon","ConstructionIcon","5","CalculateIcon","6","7","8","clsx","String","icon","Stepper","connector","Step","StepLabel","StepIconComponent","LongTextTooltip","tooltip","fontSize","typography","pxToRem","CustomTooltip","API_HOST","getModels","dispatch","axios","get","then","models","data","setModels","payload","setStep","subrow","emptyCell","padding","input","toolBar","selectModels","Models","useDispatch","useEffect","Typography","variant","Fragment","PowerBI","position","src","allowFullScreen","setViewData","schemes","ViewTable","match","params","getViewData","setWishes","wishes","setWishesStatus","args","selectWishes","Wishes","products","scheme","getWishes","status","handleClick","editRow","setEditRow","handleChangeEditField","handleClickCancel","newRows","alert","size","key1","colSpan","marginRight","amount","toFixed","averagePrice","values","key2","code","onValueChange","v","thousandSeparator","customInput","suffix","price","obj","saveWishes","handleClickSave","value1","value2","0","handleClickEditTable","setPurchases","purchase","PurchaceToolbar","model","Clear","Done","selectPurchase","Purchases","id2","getPurchases","savePurchase","handleClickEditRow","setProduction","production","setProductionStatus","selectProduction","ProductionToolbar","Production","getProduction","NumberFormatCustom","inputRef","other","getInputRef","Launch","formatter","Intl","NumberFormat","formattedValue","intValueField","setIntValueField","interval","setInterval","Grid","item","xs","sm","replace","console","log","onChangeIntegerField","required","fullWidth","inputComponent","Button","setProducts","toLocaleString","EditTable","schemesID","wishesID","getProducts","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","exact","path","Purchase","initialState","state","action","regexFirstGroupCode","regexSecondGroupCode","groupData","groups","firstGroup","secondGroup","reduce","r","a","create","forEach","doCalculates","arr","mult","getSumsAndAvg","arrKey2","getKeysObj","newObj","Array","isArray","groupAndSum","indexes","key2Group","modifedValues","oldAmount","oldPrice","copyStateWishes","modifedState","modifedPurchases","getSums","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.34fdd6f4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Fade,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  createStyles,\r\n  lighten,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number;\r\n  onDeleteItems: (e: React.MouseEvent<unknown>) => void;\r\n  getSelectedID: () => number;\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n      flex: \"1 1 100%\",\r\n    },\r\n    upload: {\r\n      display: \"none\",\r\n    },\r\n  })\r\n);\r\n\r\nconst EnhancedTableToolbar = () => {\r\n  const classes = useToolbarStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <Tooltip title=\"Power BI\">\r\n        <Link to=\"power_bi\">\r\n          <IconButton aria-label=\"analysis\">\r\n            <AssessmentIcon />\r\n          </IconButton>\r\n        </Link>\r\n      </Tooltip>\r\n      <Tooltip title=\"Add\">\r\n        <>\r\n          <IconButton\r\n            onClick={handleClick}\r\n            aria-controls=\"fade-menu\"\r\n            aria-haspopup=\"true\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"fade-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={Fade}\r\n          >\r\n            <input\r\n              id=\"upload\"\r\n              className={classes.upload}\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n            />\r\n            <label htmlFor=\"upload\">\r\n              <MenuItem onClick={handleClose}>Загрузить CSV</MenuItem>\r\n            </label>\r\n            <MenuItem onClick={handleClose}>\r\n              Из справочника существующего клиента\r\n            </MenuItem>\r\n          </Menu>\r\n        </>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default EnhancedTableToolbar;\r\n","import {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar\";\r\nimport { ColumnsTypes, DataTypes } from \"../types\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"1000px\",\r\n    margin: \"0 auto\",\r\n  },\r\n  container: {\r\n    maxHeight: \"580px\",\r\n    height: \"calc(100vh - 230px)\",\r\n  },\r\n  row: {\r\n    cursor: \"pointer\",\r\n  },\r\n  header: {\r\n    fontWeight: 700,\r\n  },\r\n  pagination: {\r\n    backgroundColor: \"rgb(161, 52, 60)\",\r\n    color: \"white\",\r\n  },\r\n  textField: {\r\n    width: \"80px\",\r\n  },\r\n});\r\n\r\nconst useTextField = makeStyles({\r\n  underline: {\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  rows: DataTypes[];\r\n  columns: ColumnsTypes[];\r\n  link?: string;\r\n  hover?: boolean;\r\n}\r\n\r\nconst CustomTable = ({ rows, columns, link = \"\", hover = true }: Props) => {\r\n  // classes\r\n  const classes = useStyles();\r\n  const classesTextField = useTextField();\r\n\r\n  // table pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // link to\r\n  const history = useHistory();\r\n  const handleRowClick = (id: number) => {\r\n    const regex = /\\/schemes$/gm;\r\n    const pathname = history.location.pathname;\r\n\r\n    if (regex.test(pathname)) {\r\n      history.push(`${pathname}/${id}/wishes`);\r\n    } else {\r\n      history.push(`/${id}/${link}`);\r\n    }\r\n  };\r\n\r\n  const handleChangeTextField = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    index: number,\r\n    name: keyof DataTypes\r\n  ) => {\r\n    rows[index] = {\r\n      ...rows[index],\r\n      [name]: \"\" + +e.target.value,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <EnhancedTableToolbar />\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover={hover}\r\n                    className={hover ? classes.row : \"\"}\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    onClick={hover ? () => handleRowClick(row.id) : undefined}\r\n                  >\r\n                    {columns.map((column, index) => {\r\n                      const value = row[column.id] || 0;\r\n                      return column.editable ? (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          <TextField\r\n                            id={`${column.id}_${index}`}\r\n                            type=\"number\"\r\n                            defaultValue={value}\r\n                            color=\"secondary\"\r\n                            className={classes.textField}\r\n                            onChange={(e) =>\r\n                              handleChangeTextField(e, index, column.id)\r\n                            }\r\n                            InputProps={{ classes: classesTextField }}\r\n                          />\r\n                        </TableCell>\r\n                      ) : (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format ? column.format(value) : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        className={classes.pagination}\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  height: 8.48,\n  transform: \"matrix(0.7071 -0.7071 0.7071 0.7071 -6.8717 17.6255)\",\n  width: 3,\n  x: 16.34,\n  y: 12.87\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.5,10c1.93,0,3.5-1.57,3.5-3.5c0-0.58-0.16-1.12-0.41-1.6l-2.7,2.7L16.4,6.11l2.7-2.7C18.62,3.16,18.08,3,17.5,3 C15.57,3,14,4.57,14,6.5c0,0.41,0.08,0.8,0.21,1.16l-1.85,1.85l-1.78-1.78l0.71-0.71L9.88,5.61L12,3.49 c-1.17-1.17-3.07-1.17-4.24,0L4.22,7.03l1.41,1.41H2.81L2.1,9.15l3.54,3.54l0.71-0.71V9.15l1.41,1.41l0.71-0.71l1.78,1.78 l-7.41,7.41l2.12,2.12L16.34,9.79C16.7,9.92,17.09,10,17.5,10z\"\n})));\n\nvar SvgConstructionBlack24Dp = function SvgConstructionBlack24Dp(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgConstructionBlack24Dp, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/construction-black-24dp.192f3bb6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M13.03,7.06L14.09,6l1.41,1.41 L16.91,6l1.06,1.06l-1.41,1.41l1.41,1.41l-1.06,1.06L15.5,9.54l-1.41,1.41l-1.06-1.06l1.41-1.41L13.03,7.06z M6.25,7.72h5v1.5h-5 V7.72z M11.5,16h-2v2H8v-2H6v-1.5h2v-2h1.5v2h2V16z M18,17.25h-5v-1.5h5V17.25z M18,14.75h-5v-1.5h5V14.75z\"\n}));\n\nvar SvgCalculateBlack24Dp = function SvgCalculateBlack24Dp(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCalculateBlack24Dp, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/calculate-black-24dp.0330955c.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n  makeStyles,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  SvgIcon,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\n\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { ReactComponent as ConstructionIcon } from \"../img/construction-black-24dp.svg\";\r\nimport { ReactComponent as CalculateIcon } from \"../img/calculate-black-24dp.svg\";\r\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\n\r\nimport { StepIconProps } from \"@material-ui/core/StepIcon\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\n\r\nimport { StepStateTypes } from \"../types\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundColor: \"#a1343c\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundColor: \"#a1343c\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: 50,\r\n    height: 50,\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundColor: \"#a1343c\",\r\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundColor: \"#a1343c\",\r\n  },\r\n});\r\n\r\nconst CustomizedSteppers = () => {\r\n  const activeStep = useSelector(({ steps: { step } }: StepStateTypes) => step);\r\n\r\n  const steps = getSteps();\r\n\r\n  function getSteps() {\r\n    return [\r\n      \"Модели\",\r\n      \"Продажи\",\r\n      \"Закупки\",\r\n      \"Производство\",\r\n      \"Расчёт\",\r\n      \"Сравнение\",\r\n      \"Корректировка\",\r\n      \"Бюджет\",\r\n    ];\r\n  }\r\n\r\n  function ColorlibStepIcon(props: StepIconProps) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons: { [index: string]: React.ReactElement } = {\r\n      1: <AppsIcon />,\r\n      2: <ReceiptIcon />,\r\n      3: <ShoppingCartIcon />,\r\n      4: <SvgIcon component={ConstructionIcon} viewBox=\"0 0 24 24\" />,\r\n      5: <SvgIcon component={CalculateIcon} viewBox=\"0 0 24 24\" />,\r\n      6: <CompareArrowsIcon />,\r\n      7: <EditIcon />,\r\n      8: <AttachMoneyIcon />,\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n          [classes.completed]: completed,\r\n        })}\r\n      >\r\n        {icons[String(props.icon)]}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSteppers;\r\n","import React from \"react\";\r\nimport { Theme, Tooltip, withStyles } from \"@material-ui/core\";\r\n\r\nconst LongTextTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}))(Tooltip);\r\n\r\nconst CustomTooltip = (props: any) => {\r\n  return <LongTextTooltip {...props} />;\r\n};\r\n\r\nexport default CustomTooltip;\r\n","export const API_HOST: string = \"http://89.175.186.74:5001\";\r\nexport const API_PATH: string = \"api/v1\";\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport { SET_MODELS, ModelsActionTypes, ModelsData } from \"../../types\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getModels = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n> => (dispatch) => {\r\n  axios\r\n    .get(`${API_HOST}/${API_PATH}/model_list`)\r\n    .then(({ data: { models } }) => dispatch(setModels(models)));\r\n};\r\n\r\nexport const setModels = (models: ModelsData[]): ModelsActionTypes => ({\r\n  type: SET_MODELS,\r\n  payload: models,\r\n});\r\n\r\nexport const deleteModel = (\r\n  selected: number[]\r\n): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n  axios\r\n    .all(\r\n      selected.map((id: number) =>\r\n        axios.get(`${API_HOST}/${API_PATH}/${id}/delete`)\r\n      )\r\n    )\r\n    .then(() => dispatch(getModels()));\r\n};\r\n","import { RouteComponentProps } from \"react-router-dom\";\r\n\r\n//head cells types\r\n\r\nexport interface HeadCell {\r\n  readonly id: string;\r\n  disablePadding: boolean;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nexport type ColumnsTypes = {\r\n  id: keyof DataTypes;\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: \"right\";\r\n  editable?: boolean;\r\n  format?: (value: number | string) => string;\r\n};\r\n\r\n// data types\r\n\r\nexport type ModelsData = {\r\n  id: number;\r\n  client_id?: number;\r\n  amount?: string;\r\n  month?: string;\r\n  name?: string;\r\n  num?: number;\r\n  profit?: string;\r\n  stage?: number;\r\n  volume?: number;\r\n};\r\n\r\nexport type ShemesData = {\r\n  id: number;\r\n  profit?: string;\r\n  ts?: string;\r\n  type?: number;\r\n};\r\n\r\nexport type WishesData = {\r\n  id: number;\r\n  amount: string;\r\n  code: string;\r\n  name: string;\r\n  price: number;\r\n};\r\n\r\ntype GroupTypes = {\r\n  firstGroup: string;\r\n  secondGroup: string;\r\n};\r\n\r\nexport type WishesItemTypes = WishesData & GroupTypes;\r\n\r\nexport type WishesTypes = {\r\n  [key1: string]: {\r\n    values: {\r\n      [key2: string]: {\r\n        values: WishesItemTypes[];\r\n        amount: number;\r\n        price: number;\r\n        averagePrice: number;\r\n      };\r\n    };\r\n    amount: number;\r\n    price: number;\r\n    averagePrice: number;\r\n  };\r\n};\r\n\r\nexport type PurchaseData = {\r\n  amount: string;\r\n  code: string;\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n};\r\n\r\nexport type ProductionItemTypes = ProductionData & GroupTypes;\r\n\r\nexport type ProductionTypes = {\r\n  [key1: string]: {\r\n    values: {\r\n      [key2: string]: {\r\n        values: ProductionItemTypes[];\r\n        amount: number;\r\n      };\r\n    };\r\n    amount: number;\r\n  };\r\n};\r\n\r\nexport type ProductionData = {\r\n  amount: string;\r\n  code: string;\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport type ProductsData = {\r\n  id: number;\r\n  amount?: string;\r\n  code?: string;\r\n  curr_cost?: number;\r\n  curr_rent?: number;\r\n  last_cost?: number;\r\n  last_price?: number;\r\n  last_rent?: number;\r\n  last_volume?: string;\r\n  name?: string;\r\n  price?: number;\r\n};\r\n\r\nexport type DataTypes = ModelsData & ShemesData & ProductsData;\r\n\r\n// state types\r\n\r\nexport interface SchemesStateTypes {\r\n  schemes: {\r\n    schemes: ShemesData[];\r\n  };\r\n}\r\n\r\nexport interface WishesStateTypes {\r\n  wishes: {\r\n    wishes: WishesTypes;\r\n    status: any;\r\n    scheme: number;\r\n  };\r\n}\r\n\r\nexport interface PurchaseStateTypes {\r\n  purchase: {\r\n    purchase: PurchaseData[];\r\n  };\r\n}\r\n\r\nexport interface ProductsStateTypes {\r\n  products: {\r\n    products: ProductsData[];\r\n  };\r\n}\r\n\r\nexport interface ProductionStateTypes {\r\n  production: {\r\n    production: ProductionTypes;\r\n    status: any;\r\n  };\r\n}\r\n\r\nexport interface StepStateTypes {\r\n  steps: {\r\n    step: number;\r\n  };\r\n}\r\n\r\n// match types\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n  id2?: string;\r\n}\r\n\r\nexport interface MatchProps extends RouteComponentProps<MatchParams> {}\r\n\r\n// models\r\n\r\nexport const SET_MODELS = \"SET_MODELS\";\r\n\r\ninterface SetModelsAction {\r\n  type: typeof SET_MODELS;\r\n  payload: ModelsData[];\r\n}\r\n\r\nexport type ModelsActionTypes = SetModelsAction;\r\n\r\n// schemes\r\n\r\nexport const SET_SCHEMES = \"SET_SCHEMES\";\r\n\r\ninterface SetSchemesAction {\r\n  type: typeof SET_SCHEMES;\r\n  payload: ShemesData[];\r\n}\r\n\r\nexport type SchemesActionType = SetSchemesAction;\r\n\r\n// wishes\r\n\r\nexport const SET_WISHES = \"SET_WISHES\";\r\nexport const SET_WISHES_STATUS = \"SET_WISHES_STATUS\";\r\nexport const SAVE_WISHES = \"SAVE_WISHES\";\r\n\r\nexport interface SetWishesPayload {\r\n  wishes: WishesData[];\r\n  scheme: number;\r\n}\r\n\r\ninterface SetWishesAction {\r\n  type: typeof SET_WISHES;\r\n  payload: SetWishesPayload;\r\n}\r\n\r\ninterface SetStatusAction {\r\n  type: typeof SET_WISHES_STATUS;\r\n  payload: string[];\r\n}\r\n\r\nexport interface SaveWishesPayloadTypes {\r\n  key1: string;\r\n  key2: string;\r\n  amount: string;\r\n  price: string;\r\n  index: number;\r\n}\r\n\r\ninterface SaveWishesAction {\r\n  type: typeof SAVE_WISHES;\r\n  payload: SaveWishesPayloadTypes;\r\n}\r\n\r\nexport type WishesActionType =\r\n  | SetWishesAction\r\n  | SetStatusAction\r\n  | SaveWishesAction;\r\n\r\n// purchase\r\n\r\nexport const SET_PURCHASES = \"SET_PURCHASE\";\r\nexport const SAVE_PURCHASES = \"SAVE_PURCHASE\";\r\n\r\ninterface SetPurchaseAction {\r\n  type: typeof SET_PURCHASES;\r\n  payload: PurchaseData[];\r\n}\r\n\r\nexport type SavePurchasePayloadTypes = {\r\n  index: number;\r\n  price: number;\r\n};\r\n\r\ninterface SavePurchaseAction {\r\n  type: typeof SAVE_PURCHASES;\r\n  payload: SavePurchasePayloadTypes;\r\n}\r\n\r\nexport type PurchaseActionType = SetPurchaseAction | SavePurchaseAction;\r\n\r\n// production\r\n\r\nexport const SET_PRODUCTION = \"SET_PRODUCTION\";\r\nexport const SET_PRODUCTION_STATUS = \"SET_PRODUCTION_STATUS\";\r\n\r\ntype SetProductionAction = {\r\n  type: typeof SET_PRODUCTION;\r\n  payload: ProductionData[];\r\n};\r\n\r\ntype SetStatusProductionAction = {\r\n  type: typeof SET_PRODUCTION_STATUS;\r\n  payload: string[];\r\n};\r\n\r\nexport type ProductionActionType =\r\n  | SetProductionAction\r\n  | SetStatusProductionAction;\r\n\r\n// products\r\n\r\nexport const SET_PRODUCTS = \"SET_PRODUCTS\";\r\n\r\ninterface SetPropductsAction {\r\n  type: typeof SET_PRODUCTS;\r\n  payload: ProductsData[];\r\n}\r\n\r\nexport type ProductsActionType = SetPropductsAction;\r\n\r\n// steps\r\n\r\nexport const SET_STEP = \"SET_STEP\";\r\n\r\ninterface SetStepAction {\r\n  type: typeof SET_STEP;\r\n  payload: number;\r\n}\r\n\r\nexport type StepsActionType = SetStepAction;\r\n","import { SET_STEP, StepsActionType } from \"../../types\";\r\n\r\nexport const setStep = (step: number): StepsActionType => ({\r\n  type: SET_STEP,\r\n  payload: step,\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"1000px\",\r\n    margin: \"0 auto\",\r\n  },\r\n  container: {\r\n    maxHeight: \"580px\",\r\n    height: \"calc(100vh - 150px)\",\r\n  },\r\n  row: {\r\n    cursor: \"pointer\",\r\n  },\r\n  subrow: {\r\n    paddingLeft: \"50px\",\r\n  },\r\n  emptyCell: {\r\n    width: \"48px\",\r\n    padding: 0,\r\n  },\r\n  header: {\r\n    fontWeight: 700,\r\n  },\r\n  pagination: {\r\n    backgroundColor: \"rgb(161, 52, 60)\",\r\n    color: \"white\",\r\n  },\r\n  textField: {\r\n    width: \"80px\",\r\n  },\r\n  input: {\r\n    width: \"100px\",\r\n  },\r\n  toolBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { CustomTooltip, EnhancedTableToolbar } from \"../components\";\r\n\r\nimport { getModels } from \"../redux/actions/models\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\nimport { ModelsData } from \"../types\";\r\n\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Typography,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport { useStyles } from \"../styles\";\r\n\r\ntype ColumnsTypes = {\r\n  id: keyof ModelsData;\r\n  label: string;\r\n  align?: \"right\";\r\n};\r\n\r\nconst columns: ColumnsTypes[] = [\r\n  { id: \"name\", label: \"Клиент\" },\r\n  { id: \"month\", label: \"Месяц\" },\r\n  { id: \"stage\", align: \"right\", label: \"Стадия\" },\r\n  { id: \"num\", align: \"right\", label: \"Позиций\" },\r\n  {\r\n    id: \"profit\",\r\n    align: \"right\",\r\n    label: \"Прибыль (тыс. руб.)\",\r\n  },\r\n];\r\n\r\ninterface ModelsState {\r\n  models: {\r\n    models: ModelsData[];\r\n  };\r\n}\r\n\r\nconst selectModels = ({ models: { models } }: ModelsState) => models;\r\n\r\nexport default function Models() {\r\n  const classes = useStyles();\r\n\r\n  // load models\r\n  const dispatch = useDispatch();\r\n\r\n  const rows = useSelector(selectModels);\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(0));\r\n    dispatch(getModels());\r\n  }, [dispatch]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSchemesClick = (id: number) => {\r\n    history.push(`/${id}/schemes`);\r\n  };\r\n  const handleWishesClick = (id: number) => {\r\n    history.push(`/${id}/wishes`);\r\n  };\r\n\r\n  const handlePowerBIClick = () => {\r\n    history.push(`/power_bi`);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Список доступных моделей\r\n          </Typography>\r\n          <div className=\"right-side\">\r\n            <CustomTooltip title=\"Добавить модель\">\r\n              <IconButton color=\"secondary\" aria-label=\"add model\">\r\n                <AddIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip title=\"Сравнение\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Power BI\"\r\n                onClick={handlePowerBIClick}\r\n              >\r\n                <AssessmentIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </div>\r\n        </Toolbar>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell align=\"center\">Действия</TableCell>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => {\r\n              return (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>\r\n                    <CustomTooltip\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">\r\n                            Служебная страница\r\n                          </Typography>\r\n                          Здесь доступны все schemes для модели\r\n                        </React.Fragment>\r\n                      }\r\n                    >\r\n                      <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"go to all schemes for model\"\r\n                        onClick={() => handleSchemesClick(row.id)}\r\n                      >\r\n                        <CodeIcon />\r\n                      </IconButton>\r\n                    </CustomTooltip>\r\n                    <CustomTooltip\r\n                      title={<React.Fragment>Шаг №2</React.Fragment>}\r\n                    >\r\n                      <IconButton\r\n                        onClick={() => handleWishesClick(row.id)}\r\n                        color=\"secondary\"\r\n                        aria-label=\"go to step 2\"\r\n                      >\r\n                        <ReceiptIcon />\r\n                      </IconButton>\r\n                    </CustomTooltip>\r\n                  </TableCell>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id] || 0;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\nconst BI_URL =\r\n  \"https://app.powerbi.com/view?r=eyJrIjoiODYwYjBhOGMtZTIzYS00ZDJkLTk1MTEtNTk3Nzk4YTE2ZjUzIiwidCI6IjJhZTk1YzIwLWM2NzUtNGM0OC04OGQzLWYyNzZiNzYyYmY1MiIsImMiOjl9\";\r\n\r\nconst PowerBI = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(5));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"power-BI\">\r\n      <iframe\r\n        title=\"Power BI\"\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          height: \"90vh\",\r\n          border: \"none\",\r\n        }}\r\n        src={BI_URL}\r\n        allowFullScreen={true}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PowerBI;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\n\r\nimport { SET_SCHEMES, ShemesData, SchemesActionType } from \"../../types\";\r\n\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getViewData = (\r\n  id: number\r\n): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n  axios\r\n    .get(`${API_HOST}/${API_PATH}/${id}/schemes`)\r\n    .then(({ data: { schemes } }) => dispatch(setViewData(schemes)));\r\n};\r\n\r\nexport const setViewData = (schemes: ShemesData[]): SchemesActionType => ({\r\n  type: SET_SCHEMES,\r\n  payload: schemes,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getViewData } from \"../redux/actions/schemes\";\r\nimport { ColumnsTypes, SchemesStateTypes, MatchProps } from \"../types\";\r\n\r\nimport { CustomTable } from \"../components\";\r\n\r\nconst ViewTable = ({ match }: MatchProps) => {\r\n  const dispatch = useDispatch();\r\n  const id = +match.params.id;\r\n\r\n  const columns: ColumnsTypes[] = [\r\n    { id: \"id\", label: \"№\" },\r\n    { id: \"ts\", label: \"Дата\" },\r\n    { id: \"profit\", align: \"right\", label: \"Прибыль\" },\r\n    { id: \"type\", align: \"right\", label: \"Тип\" },\r\n  ];\r\n\r\n  const rows = useSelector(\r\n    ({ schemes: { schemes } }: SchemesStateTypes) => schemes\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getViewData(id));\r\n  }, [dispatch, id]);\r\n\r\n  return <CustomTable rows={rows} columns={columns} />;\r\n};\r\n\r\nexport default ViewTable;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\n\r\nimport {\r\n  SET_WISHES,\r\n  SET_WISHES_STATUS,\r\n  SAVE_WISHES,\r\n  WishesActionType,\r\n  SaveWishesPayloadTypes,\r\n  SetWishesPayload,\r\n} from \"../../types\";\r\n\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getWishes = (\r\n  id: number\r\n): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n  axios\r\n    .get(`${API_HOST}/${API_PATH}/${id}/wishes`)\r\n    .then(({ data: { products: wishes, scheme } }) =>\r\n      dispatch(setWishes({ wishes, scheme }))\r\n    );\r\n};\r\n\r\nexport const setWishes = (wishes: SetWishesPayload): WishesActionType => ({\r\n  type: SET_WISHES,\r\n  payload: wishes,\r\n});\r\n\r\nexport const setWishesStatus = (args: string[]): WishesActionType => ({\r\n  type: SET_WISHES_STATUS,\r\n  payload: args,\r\n});\r\n\r\nexport const saveWishes = (obj: SaveWishesPayloadTypes): WishesActionType => ({\r\n  type: SAVE_WISHES,\r\n  payload: obj,\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport {\r\n  WishesStateTypes,\r\n  MatchProps,\r\n  SaveWishesPayloadTypes,\r\n  WishesItemTypes,\r\n} from \"../types\";\r\n\r\nimport {\r\n  getWishes,\r\n  setWishesStatus,\r\n  saveWishes,\r\n} from \"../redux/actions/wishes\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport FunctionsIcon from \"@material-ui/icons/Functions\";\r\n\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStyles } from \"../styles\";\r\n\r\nconst selectWishes = ({ wishes }: WishesStateTypes) => wishes;\r\n\r\nconst Wishes = ({ match }: MatchProps) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const id = +match.params.id;\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(1));\r\n    dispatch(getWishes(id));\r\n  }, [dispatch, id]);\r\n\r\n  const { wishes: rows, status, scheme } = useSelector(selectWishes);\r\n\r\n  const handleClick = (...args: string[]) => {\r\n    dispatch(setWishesStatus(args));\r\n  };\r\n\r\n  interface EditRowTypes {\r\n    [id: number]: {\r\n      0: string;\r\n      1: string;\r\n    };\r\n  }\r\n\r\n  const [editRow, setEditRow] = useState<EditRowTypes>({});\r\n\r\n  const handleClickEditTable = (id: number, value1: string, value2: string) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: { 0: value1, 1: value2 },\r\n    });\r\n  };\r\n\r\n  const handleChangeEditField = ({ value }: any, id: number, index: number) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: {\r\n        ...editRow[id],\r\n        [index]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleClickCancel = (id: number) => {\r\n    const newRows = { ...editRow };\r\n    delete newRows[id];\r\n    setEditRow(newRows);\r\n  };\r\n\r\n  const handleClickSave = (\r\n    id: number,\r\n    key1: string,\r\n    key2: string,\r\n    index: number\r\n  ) => {\r\n    const obj: SaveWishesPayloadTypes = {\r\n      key1,\r\n      key2,\r\n      amount: editRow[id][0],\r\n      price: editRow[id][1],\r\n      index,\r\n    };\r\n    dispatch(saveWishes(obj));\r\n    handleClickCancel(id);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleClickSkip = () => {\r\n    history.push(`/${id}/schemes/${scheme}/purchase`);\r\n  };\r\n\r\n  const handleClickCalculate = () => {\r\n    alert(\"Рассчитать линейно\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <div className=\"left-side\">\r\n            <CustomTooltip title=\"Модели\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"back\"\r\n                onClick={handleClickBack}\r\n              >\r\n                <KeyboardBackspaceIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </div>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Ввод плана продаж готовой продукции\r\n          </Typography>\r\n          <div className=\"right-side\">\r\n            <CustomTooltip title=\"Продолжить без сохранения\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"not save\"\r\n                onClick={handleClickSkip}\r\n              >\r\n                <RedoIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip title=\"Рассчитать линейно\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"calculate\"\r\n                onClick={handleClickCalculate}\r\n              >\r\n                <FunctionsIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </div>\r\n        </Toolbar>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell className={classes.emptyCell}></TableCell>\r\n              <TableCell className={classes.emptyCell}></TableCell>\r\n              <TableCell>№</TableCell>\r\n              <TableCell>Наименование позиции</TableCell>\r\n              <TableCell style={{ minWidth: 150 }}>Объем, т</TableCell>\r\n              <TableCell style={{ minWidth: 150 }}>\r\n                Цена реализации, руб/кг\r\n              </TableCell>\r\n              <TableCell align=\"center\">Действия</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.keys(rows).map((key1) => {\r\n              return (\r\n                <React.Fragment key={key1}>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      colSpan={4}\r\n                      onClick={() => handleClick(key1)}\r\n                    >\r\n                      <IconButton\r\n                        style={{ marginRight: 16 }}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      >\r\n                        {status[key1].status ? (\r\n                          <ExpandMoreIcon />\r\n                        ) : (\r\n                          <ChevronRightIcon />\r\n                        )}\r\n                      </IconButton>\r\n                      <span>\r\n                        Код: <span style={{ fontWeight: 400 }}>{key1}</span>\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell style={{ fontWeight: 700 }} align=\"left\">\r\n                      {+rows[key1].amount.toFixed(8)}\r\n                    </TableCell>\r\n                    <TableCell style={{ fontWeight: 700 }} align=\"left\">\r\n                      {+rows[key1].averagePrice.toFixed(8)}\r\n                    </TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                  {status[key1].status &&\r\n                    Object.keys(rows[key1].values).map((key2) => (\r\n                      <React.Fragment key={key2}>\r\n                        <TableRow>\r\n                          <TableCell />\r\n                          <TableCell\r\n                            colSpan={3}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => handleClick(key1, key2)}\r\n                          >\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              color=\"secondary\"\r\n                              style={{ marginRight: 16 }}\r\n                            >\r\n                              {status[key1][key2].status ? (\r\n                                <ExpandMoreIcon />\r\n                              ) : (\r\n                                <ChevronRightIcon />\r\n                              )}\r\n                            </IconButton>\r\n                            <span>\r\n                              Код:{\" \"}\r\n                              <span style={{ fontWeight: 400 }}>{key2}</span>\r\n                            </span>\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {+rows[key1].values[key2].amount.toFixed(8)}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {+rows[key1].values[key2].averagePrice.toFixed(8)}\r\n                          </TableCell>\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                        {status[key1][key2].status &&\r\n                          rows[key1].values[key2].values.map(\r\n                            (row: WishesItemTypes, index: number) => {\r\n                              return (\r\n                                <TableRow key={`${key2}_${index}`}>\r\n                                  <TableCell></TableCell>\r\n                                  <TableCell></TableCell>\r\n                                  <TableCell>{row.code}</TableCell>\r\n                                  <TableCell>{row.name}</TableCell>\r\n                                  {editRow.hasOwnProperty(row.id) ? (\r\n                                    <>\r\n                                      <TableCell>\r\n                                        <NumberFormat\r\n                                          value={editRow[row.id][0]}\r\n                                          onValueChange={({ value: v }) =>\r\n                                            handleChangeEditField(\r\n                                              { value: v },\r\n                                              row.id,\r\n                                              0\r\n                                            )\r\n                                          }\r\n                                          thousandSeparator={\" \"}\r\n                                          customInput={TextField}\r\n                                          InputProps={{\r\n                                            color: \"secondary\",\r\n                                            size: \"small\",\r\n                                            className: classes.input,\r\n                                          }}\r\n                                        />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <NumberFormat\r\n                                          value={editRow[row.id][1]}\r\n                                          onValueChange={({ value: v }) =>\r\n                                            handleChangeEditField(\r\n                                              { value: v },\r\n                                              row.id,\r\n                                              1\r\n                                            )\r\n                                          }\r\n                                          thousandSeparator={\" \"}\r\n                                          suffix={\"\\u20BD\"}\r\n                                          customInput={TextField}\r\n                                          InputProps={{\r\n                                            color: \"secondary\",\r\n                                            size: \"small\",\r\n                                            className: classes.input,\r\n                                          }}\r\n                                        />\r\n                                      </TableCell>\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {+row.amount}\r\n                                      </TableCell>\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {row.price}\r\n                                      </TableCell>\r\n                                    </>\r\n                                  )}\r\n                                  {!editRow.hasOwnProperty(row.id) ? (\r\n                                    <TableCell align=\"center\">\r\n                                      <IconButton\r\n                                        onClick={() =>\r\n                                          handleClickEditTable(\r\n                                            row.id,\r\n                                            row.amount,\r\n                                            \"\" + row.price\r\n                                          )\r\n                                        }\r\n                                        size=\"small\"\r\n                                        color=\"secondary\"\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  ) : (\r\n                                    <TableCell align=\"center\">\r\n                                      <IconButton\r\n                                        onClick={() =>\r\n                                          handleClickSave(\r\n                                            row.id,\r\n                                            key1,\r\n                                            key2,\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                        size=\"small\"\r\n                                        color=\"secondary\"\r\n                                      >\r\n                                        <SaveIcon />\r\n                                      </IconButton>\r\n                                      <IconButton\r\n                                        onClick={() =>\r\n                                          handleClickCancel(row.id)\r\n                                        }\r\n                                        size=\"small\"\r\n                                        color=\"secondary\"\r\n                                      >\r\n                                        <CancelIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  )}\r\n                                </TableRow>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </React.Fragment>\r\n                    ))}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Wishes;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport {\r\n  SET_PURCHASES,\r\n  SAVE_PURCHASES,\r\n  PurchaseActionType,\r\n  PurchaseData,\r\n  SavePurchasePayloadTypes,\r\n} from \"../../types\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getPurchases = (\r\n  model: string,\r\n  scheme: string = \"\"\r\n): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n  axios\r\n    .get(`${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/purchase/0`)\r\n    .then(({ data: { products: purchase } }) =>\r\n      dispatch(setPurchases(purchase))\r\n    );\r\n};\r\n\r\nexport const setPurchases = (purchase: PurchaseData[]): PurchaseActionType => ({\r\n  type: SET_PURCHASES,\r\n  payload: purchase,\r\n});\r\n\r\nexport const savePurchase = (\r\n  obj: SavePurchasePayloadTypes\r\n): PurchaseActionType => ({\r\n  type: SAVE_PURCHASES,\r\n  payload: obj,\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport { getPurchases, savePurchase } from \"../redux/actions/purchase\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\nimport {\r\n  PurchaseData,\r\n  MatchProps,\r\n  PurchaseStateTypes,\r\n  SavePurchasePayloadTypes,\r\n} from \"../types\";\r\n\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Typography,\r\n  Toolbar,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n  Clear as ClearIcon,\r\n  Done as DoneIcon,\r\n  KeyboardBackspace as KeyboardBackspaceIcon,\r\n  Functions as FunctionsIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { useStyles } from \"../styles\";\r\n\r\ntype ColumnsTypes = {\r\n  id: keyof PurchaseData;\r\n  label: string;\r\n  align?: \"right\";\r\n};\r\n\r\nconst columns: ColumnsTypes[] = [\r\n  { id: \"name\", label: \"Наименование\" },\r\n  { id: \"amount\", label: \"Закупка, т\" },\r\n  { id: \"price\", label: \"Цена, руб/кг\" },\r\n];\r\n\r\ntype ToolbarPropsTypes = {\r\n  model: string;\r\n  scheme: string | undefined;\r\n};\r\n\r\nconst PurchaceToolbar = ({ model, scheme }: ToolbarPropsTypes) => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickBack = () => {\r\n    history.push(`/${model}/wishes`);\r\n  };\r\n\r\n  const handleClickCalculate = () => {\r\n    alert(\"Рассчитать линейно\");\r\n  };\r\n\r\n  const handleClickRefuse = () => {\r\n    alert(\"Отказаться\");\r\n  };\r\n\r\n  const handleClickAccept = () => {\r\n    history.push(`/${model}/schemes/${scheme}/production`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar className={classes.toolBar}>\r\n      <div className=\"left-side\">\r\n        <CustomTooltip title=\"Продажи\">\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"back\"\r\n            onClick={handleClickBack}\r\n          >\r\n            <KeyboardBackspaceIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </div>\r\n      <Typography variant=\"h6\" component=\"h2\">\r\n        Корректировка плана закупок\r\n      </Typography>\r\n      <div className=\"right-side\">\r\n        <CustomTooltip title=\"Отказаться\">\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"refuse\"\r\n            onClick={handleClickRefuse}\r\n          >\r\n            <ClearIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Рассчитать линейно\">\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"calculate\"\r\n            onClick={handleClickCalculate}\r\n          >\r\n            <FunctionsIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Принять\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"accept\"\r\n            onClick={handleClickAccept}\r\n          >\r\n            <DoneIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst selectPurchase = ({ purchase: { purchase } }: PurchaseStateTypes) =>\r\n  purchase;\r\n\r\nconst Purchases = ({ match }: MatchProps) => {\r\n  const classes = useStyles();\r\n\r\n  // load purchases\r\n  const dispatch = useDispatch();\r\n  const { id: model, id2: scheme } = match.params;\r\n\r\n  const rows = useSelector(selectPurchase);\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(2));\r\n    dispatch(getPurchases(model, scheme));\r\n  }, [dispatch, model, scheme]);\r\n\r\n  // edit rows\r\n\r\n  interface EditRowTypes {\r\n    [id: number]: string;\r\n  }\r\n\r\n  const [editRow, setEditRow] = useState<EditRowTypes>({});\r\n\r\n  const handleClickEditRow = (id: number, value: string) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  const handleChangeEditField = ({ value }: any, id: number) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  const handleClickCancel = (id: number) => {\r\n    const newRows = { ...editRow };\r\n    delete newRows[id];\r\n    setEditRow(newRows);\r\n  };\r\n\r\n  const handleClickSave = (id: number, index: number) => {\r\n    const obj: SavePurchasePayloadTypes = {\r\n      index,\r\n      price: +editRow[id],\r\n    };\r\n    dispatch(savePurchase(obj));\r\n    handleClickCancel(id);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <PurchaceToolbar model={model} scheme={scheme} />\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n              <TableCell align=\"center\">Действия</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(({ id, name, amount, price }, index) => {\r\n              return (\r\n                <TableRow key={id}>\r\n                  <TableCell>{name}</TableCell>\r\n                  <TableCell>{amount}</TableCell>\r\n                  {editRow.hasOwnProperty(id) ? (\r\n                    <TableCell>\r\n                      <NumberFormat\r\n                        value={editRow[id]}\r\n                        thousandSeparator={\" \"}\r\n                        customInput={TextField}\r\n                        suffix={\"\\u20BD\"}\r\n                        InputProps={{\r\n                          color: \"secondary\",\r\n                          size: \"small\",\r\n                          className: classes.input,\r\n                        }}\r\n                        onValueChange={({ value: v }) =>\r\n                          handleChangeEditField({ value: v }, id)\r\n                        }\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell>{price}</TableCell>\r\n                  )}\r\n                  {editRow.hasOwnProperty(id) ? (\r\n                    <TableCell align=\"center\">\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        onClick={() => handleClickSave(id, index)}\r\n                      >\r\n                        <SaveIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        onClick={() => handleClickCancel(id)}\r\n                      >\r\n                        <CancelIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align=\"center\">\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        onClick={() => handleClickEditRow(id, \"\" + price)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Purchases;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\n\r\nimport {\r\n  SET_PRODUCTION,\r\n  SET_PRODUCTION_STATUS,\r\n  ProductionActionType,\r\n  ProductionData,\r\n} from \"../../types\";\r\n\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getProduction = (\r\n  model: string,\r\n  scheme: string = \"\"\r\n): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n  axios\r\n    .get(`${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/production/0`)\r\n    .then(({ data: { products: production } }) =>\r\n      dispatch(setProduction(production))\r\n    );\r\n};\r\n\r\nexport const setProduction = (\r\n  production: ProductionData[]\r\n): ProductionActionType => ({\r\n  type: SET_PRODUCTION,\r\n  payload: production,\r\n});\r\n\r\nexport const setProductionStatus = (args: string[]): ProductionActionType => ({\r\n  type: SET_PRODUCTION_STATUS,\r\n  payload: args,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  MatchProps,\r\n  ProductionItemTypes,\r\n  ProductionStateTypes,\r\n} from \"../types\";\r\n\r\nimport {\r\n  getProduction,\r\n  setProductionStatus,\r\n} from \"../redux/actions/production\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Clear as ClearIcon,\r\n  Done as DoneIcon,\r\n  KeyboardBackspace as KeyboardBackspaceIcon,\r\n  ChevronRight as ChevronRightIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { useStyles } from \"../styles\";\r\n\r\nconst selectProduction = ({ production }: ProductionStateTypes) => production;\r\n\r\ntype ToolbarPropsTypes = {\r\n  model: string;\r\n  scheme: string | undefined;\r\n};\r\n\r\nconst ProductionToolbar = ({ model, scheme }: ToolbarPropsTypes) => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickBack = () => {\r\n    history.push(`/${model}/schemes/${scheme}/purchase`);\r\n  };\r\n\r\n  const handleClickRefuse = () => {\r\n    alert(\"Отказаться\");\r\n  };\r\n\r\n  const handleClickAccept = () => {\r\n    history.push(`/${model}/schemes/${scheme}/launch`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar className={classes.toolBar}>\r\n      <div className=\"left-side\">\r\n        <CustomTooltip title=\"Закупки\">\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"back\"\r\n            onClick={handleClickBack}\r\n          >\r\n            <KeyboardBackspaceIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </div>\r\n      <Typography variant=\"h6\" component=\"h2\">\r\n        Корректировка плана производства\r\n      </Typography>\r\n      <div className=\"right-side\">\r\n        <CustomTooltip title=\"Отказаться\">\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"refuse\"\r\n            onClick={handleClickRefuse}\r\n          >\r\n            <ClearIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Принять\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"accept\"\r\n            onClick={handleClickAccept}\r\n          >\r\n            <DoneIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst Production = ({ match }: MatchProps) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const { id: model, id2: scheme } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(3));\r\n    dispatch(getProduction(model, scheme));\r\n  }, [dispatch, model, scheme]);\r\n\r\n  const { production: rows, status } = useSelector(selectProduction);\r\n\r\n  const handleClick = (...args: string[]) => {\r\n    dispatch(setProductionStatus(args));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <ProductionToolbar model={model} scheme={scheme} />\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell className={classes.emptyCell}></TableCell>\r\n              <TableCell className={classes.emptyCell}></TableCell>\r\n              <TableCell style={{ width: 100 }}>№</TableCell>\r\n              <TableCell style={{ width: 400 }}>Операция</TableCell>\r\n              <TableCell style={{ minWidth: 150 }}>Объем, т</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.keys(rows).map((key1) => {\r\n              return (\r\n                <React.Fragment key={key1}>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      colSpan={4}\r\n                      onClick={() => handleClick(key1)}\r\n                    >\r\n                      <IconButton\r\n                        style={{ marginRight: 16 }}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                      >\r\n                        {status[key1].status ? (\r\n                          <ExpandMoreIcon />\r\n                        ) : (\r\n                          <ChevronRightIcon />\r\n                        )}\r\n                      </IconButton>\r\n                      <span>\r\n                        Код: <span style={{ fontWeight: 400 }}>{key1}</span>\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell style={{ fontWeight: 700 }} align=\"left\">\r\n                      {+rows[key1].amount.toFixed(8)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  {status[key1].status &&\r\n                    Object.keys(rows[key1].values).map((key2) => (\r\n                      <React.Fragment key={key2}>\r\n                        <TableRow>\r\n                          <TableCell />\r\n                          <TableCell\r\n                            colSpan={3}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => handleClick(key1, key2)}\r\n                          >\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              color=\"secondary\"\r\n                              style={{ marginRight: 16 }}\r\n                            >\r\n                              {status[key1][key2].status ? (\r\n                                <ExpandMoreIcon />\r\n                              ) : (\r\n                                <ChevronRightIcon />\r\n                              )}\r\n                            </IconButton>\r\n                            <span>\r\n                              Код:{\" \"}\r\n                              <span style={{ fontWeight: 400 }}>{key2}</span>\r\n                            </span>\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {+rows[key1].values[key2].amount.toFixed(8)}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        {status[key1][key2].status &&\r\n                          rows[key1].values[key2].values.map(\r\n                            (row: ProductionItemTypes, index: number) => {\r\n                              return (\r\n                                <TableRow key={`${key2}_${index}`}>\r\n                                  <TableCell></TableCell>\r\n                                  <TableCell></TableCell>\r\n                                  <TableCell>{row.code}</TableCell>\r\n                                  <TableCell>{row.name}</TableCell>\r\n\r\n                                  <TableCell\r\n                                    style={{\r\n                                      color: \"rgba(0, 0, 0, 0.5)\",\r\n                                    }}\r\n                                  >\r\n                                    {+row.amount}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </React.Fragment>\r\n                    ))}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Production;\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStyles } from \"../styles\";\r\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\ninterface NumberFormatCustomProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator={\" \"}\r\n    />\r\n  );\r\n}\r\n\r\nconst Launch = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(4));\r\n  }, [dispatch]);\r\n\r\n  const formatter = new Intl.NumberFormat(\"ru\");\r\n\r\n  const [intValueField, setIntValueField] = useState({\r\n    value: \"100\",\r\n    formattedValue: formatter.format(100),\r\n  });\r\n\r\n  const onChangeIntegerField = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const intRegex = /^[0-9]*$/;\r\n    const value = e.target.value.replace(/\\s/g, \"\");\r\n    console.log(value);\r\n    if (intRegex.test(value)) {\r\n      setIntValueField({\r\n        value,\r\n        formattedValue: value ? formatter.format(+value) : \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const [interval, setInterval] = useState(\"10\");\r\n\r\n  const handleChangeInterval = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setInterval(e.target.value);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickRun = () => {\r\n    alert(\"Моделирование запущенно!\");\r\n    history.push(\"/power_bi\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Запуск процесса моделирования\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"count\"\r\n            name=\"count\"\r\n            label=\"Количество отбираемых решений\"\r\n            value={intValueField.formattedValue}\r\n            onChange={(e) => onChangeIntegerField(e)}\r\n            color=\"secondary\"\r\n            required\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"interval\"\r\n            name=\"interval\"\r\n            defaultValue={\"10\"}\r\n            value={interval}\r\n            onChange={handleChangeInterval}\r\n            color=\"secondary\"\r\n            label=\"Интервал изменения объема продукции (+/- процентов)\"\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom as any,\r\n            }}\r\n            required\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} sm={6}>\r\n          <Button color=\"secondary\" onClick={handleClickRun}>\r\n            Запустить моделирование\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Launch;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport { SET_PRODUCTS, ProductsActionType, ProductsData } from \"../../types\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getProducts = (\r\n  schemesID: string,\r\n  wishesID: string = \"\"\r\n): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n  axios\r\n    .get(`${API_HOST}/${API_PATH}/${schemesID}/schemes/${wishesID}/wishes`)\r\n    .then(({ data: { products } }) => dispatch(setProducts(products)));\r\n};\r\n\r\nexport const setProducts = (products: ProductsData[]): ProductsActionType => ({\r\n  type: SET_PRODUCTS,\r\n  payload: products,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { CustomTable } from \"../components\";\r\nimport { getProducts } from \"../redux/actions/products\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\nimport { ProductsStateTypes, MatchProps, ColumnsTypes } from \"../types\";\r\n\r\nconst columns: ColumnsTypes[] = [\r\n  { id: \"code\", label: \"Код\" },\r\n  { id: \"name\", label: \"Наименование\\u00a0позиции\" },\r\n  {\r\n    id: \"amount\",\r\n    label: \"Объем,\\u00a0т\",\r\n    editable: true,\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"Цена,\\u00a0руб\\u002fкг\",\r\n    editable: true,\r\n  },\r\n  {\r\n    id: \"curr_rent\",\r\n    label: \"Рент-сть,\\u00a0%\",\r\n    align: \"right\",\r\n    format: (value: string | number) =>\r\n      (+(+value).toFixed(2)).toLocaleString(\"ru-RU\"),\r\n  },\r\n  {\r\n    id: \"last_volume\",\r\n    label: \"Объем,\\u00a0т\",\r\n    align: \"right\",\r\n    format: (value: number | string) => (+value).toLocaleString(\"ru-RU\"),\r\n  },\r\n  {\r\n    id: \"last_price\",\r\n    label: \"Цена,\\u00a0руб\\u002fкг\",\r\n    align: \"right\",\r\n    format: (value: number | string) => (+value).toLocaleString(\"ru-RU\"),\r\n  },\r\n  {\r\n    id: \"last_rent\",\r\n    label: \"Рент-сть,\\u00a0%\",\r\n    align: \"right\",\r\n    format: (value: string | number) =>\r\n      (+(+value).toFixed(2)).toLocaleString(\"ru-RU\"),\r\n  },\r\n];\r\n\r\nconst EditTable = ({ match }: MatchProps) => {\r\n  const dispatch = useDispatch();\r\n  const { id: schemesID, id2: wishesID } = match.params;\r\n\r\n  const rows = useSelector(\r\n    ({ products: { products } }: ProductsStateTypes) => products\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(6));\r\n    dispatch(getProducts(schemesID, wishesID));\r\n  }, [dispatch, schemesID, wishesID]);\r\n\r\n  return <CustomTable rows={rows} columns={columns} hover={false} />;\r\n};\r\n\r\nexport default EditTable;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport {\n  Models,\n  Wishes,\n  PowerBI,\n  ViewTable,\n  EditTable,\n  Purchase,\n  Production,\n  Launch,\n} from \"./pages\";\nimport { CustomizedSteppers } from \"./components\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n// import { ruRU } from \"@material-ui/core/locale\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#4caf50\",\n    },\n    secondary: {\n      main: \"rgb(161, 52, 60)\",\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CustomizedSteppers />\n      <Switch>\n        <Route exact path=\"/\" component={Models} />\n        <Route exact path=\"/power_bi\" component={PowerBI} />\n        <Route exact path=\"/:id/schemes\" component={ViewTable} />\n        <Route exact path=\"/:id/wishes\" component={Wishes} />\n        <Route exact path=\"/:id/schemes/:id2/purchase\" component={Purchase} />\n        <Route\n          exact\n          path=\"/:id/schemes/:id2/production\"\n          component={Production}\n        />\n        <Route exact path=\"/:id/schemes/:id2/launch\" component={Launch} />\n        <Route exact path=\"/:id/schemes/:id2/wishes\" component={EditTable} />\n      </Switch>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ModelsData, SET_MODELS, ModelsActionTypes } from \"../../types\";\r\n\r\ninterface stateTypes {\r\n  models: ModelsData[];\r\n}\r\n\r\nconst initialState: stateTypes = {\r\n  models: [],\r\n};\r\n\r\nconst models = (\r\n  state = initialState,\r\n  action: ModelsActionTypes\r\n): stateTypes => {\r\n  switch (action.type) {\r\n    case SET_MODELS: {\r\n      return {\r\n        ...state,\r\n        models: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default models;\r\n","import { SET_SCHEMES, ShemesData, SchemesActionType } from \"../../types\";\r\n\r\ninterface StateTypes {\r\n  schemes: ShemesData[];\r\n}\r\n\r\nconst initialState: StateTypes = {\r\n  schemes: [],\r\n};\r\n\r\nconst schemes = (\r\n  state = initialState,\r\n  action: SchemesActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_SCHEMES: {\r\n      return {\r\n        ...state,\r\n        schemes: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default schemes;\r\n","import {\r\n  SET_WISHES,\r\n  SET_WISHES_STATUS,\r\n  SAVE_WISHES,\r\n  WishesActionType,\r\n  WishesData,\r\n  WishesItemTypes,\r\n  WishesTypes,\r\n} from \"../../types\";\r\n\r\ninterface StateTypes {\r\n  wishes: WishesTypes;\r\n  status: any;\r\n  scheme: number;\r\n}\r\n\r\nconst initialState: StateTypes = {\r\n  wishes: {},\r\n  status: {},\r\n  scheme: 1315,\r\n};\r\n\r\nconst regexFirstGroupCode: RegExp = /^([0-9][0-9]*)\\./;\r\nconst regexSecondGroupCode: RegExp = /^([0-9][0-9]*\\.[0-9]*)/;\r\n\r\nconst groupData = (data: WishesData[]) => {\r\n  const newData = data.map((item) => {\r\n    const firstGroup: string =\r\n      item.code.match(regexFirstGroupCode)![1] || \"all\";\r\n    const secondGroup: string =\r\n      item.code.match(regexSecondGroupCode)![1] || \"all\";\r\n\r\n    return {\r\n      ...item,\r\n      firstGroup,\r\n      secondGroup,\r\n    };\r\n  });\r\n\r\n  let groups = newData.reduce((r, a) => {\r\n    r[a.firstGroup] = r[a.firstGroup] || { values: [] };\r\n    r[a.firstGroup][\"values\"].push(a);\r\n    return r;\r\n  }, Object.create(null));\r\n\r\n  Object.keys(groups).forEach((key) => {\r\n    groups[key].values = groups[key].values.reduce(\r\n      (r: any, a: WishesItemTypes) => {\r\n        r[a.secondGroup] = r[a.secondGroup] || { values: [] };\r\n        r[a.secondGroup][\"values\"].push(a);\r\n        return r;\r\n      },\r\n      Object.create(null)\r\n    );\r\n  });\r\n\r\n  return groups;\r\n};\r\n\r\ntype ValuesTypes = {\r\n  amount: number;\r\n  price: number;\r\n  mult: number;\r\n};\r\n\r\nconst doCalculates = (arr: any) => {\r\n  return arr.reduce(\r\n    (r: ValuesTypes, a: { price: number; amount: string | number }) => {\r\n      r.mult += a.price * +a.amount;\r\n      r.price += a.price;\r\n      r.amount += +a.amount;\r\n      return r;\r\n    },\r\n    {\r\n      amount: 0,\r\n      price: 0,\r\n      mult: 0,\r\n    }\r\n  );\r\n};\r\n\r\nconst getSumsAndAvg = (data: any) => {\r\n  Object.keys(data).forEach((key1) => {\r\n    Object.keys(data[key1].values).forEach((key2) => {\r\n      const { amount, price, mult } = doCalculates(\r\n        data[key1].values[key2].values\r\n      );\r\n\r\n      data[key1].values[key2] = {\r\n        values: data[key1].values[key2].values,\r\n        price,\r\n        amount,\r\n        averagePrice: amount ? mult / amount : 0,\r\n      };\r\n    });\r\n\r\n    const arrKey2 = Object.keys(data[key1].values).map((key2) => {\r\n      const { amount, averagePrice: price } = data[key1].values[key2];\r\n      return { amount, price };\r\n    });\r\n\r\n    const { amount, price, mult } = doCalculates(arrKey2);\r\n\r\n    data[key1] = {\r\n      values: data[key1].values,\r\n      price,\r\n      amount,\r\n      averagePrice: mult / amount,\r\n    };\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nconst getKeysObj = (obj: any) => {\r\n  let newObj = { status: false };\r\n  if (!Array.isArray(obj)) {\r\n    for (let key in obj) {\r\n      newObj = {\r\n        ...newObj,\r\n        [key]: getKeysObj(obj[key].values),\r\n      };\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n};\r\n\r\nconst products = (\r\n  state = initialState,\r\n  action: WishesActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_WISHES: {\r\n      const { wishes, scheme } = action.payload;\r\n      const groups = groupData(wishes);\r\n      const status = getKeysObj(groups);\r\n      const groupAndSum: WishesTypes = getSumsAndAvg(groups);\r\n\r\n      return {\r\n        ...state,\r\n        wishes: groupAndSum,\r\n        status,\r\n        scheme,\r\n      };\r\n    }\r\n    case SET_WISHES_STATUS: {\r\n      const indexes = action.payload;\r\n      if (indexes.length === 2) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              [indexes[1]]: {\r\n                status: !state.status[indexes[0]][indexes[1]].status,\r\n              },\r\n            },\r\n          },\r\n        };\r\n      }\r\n      if (indexes.length === 1) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              status: !state.status[indexes[0]].status,\r\n            },\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SAVE_WISHES: {\r\n      const { key1, key2, amount, price, index } = action.payload;\r\n\r\n      const key2Group = state.wishes[key1].values[key2].values;\r\n\r\n      const modifedValues = [...key2Group];\r\n      const { amount: oldAmount, price: oldPrice } = modifedValues[index];\r\n\r\n      if (amount === oldAmount && \"\" + oldPrice === price) {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n\r\n      const copyStateWishes = { ...state.wishes };\r\n      let modifedState = copyStateWishes[key1].values[key2].values[index];\r\n      modifedState.price = +price;\r\n      modifedState.amount = amount;\r\n\r\n      return {\r\n        ...state,\r\n        wishes: getSumsAndAvg(copyStateWishes),\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default products;\r\n","import {\r\n  SET_PURCHASES,\r\n  SAVE_PURCHASES,\r\n  PurchaseActionType,\r\n  PurchaseData,\r\n} from \"../../types\";\r\n\r\ninterface stateTypes {\r\n  purchase: PurchaseData[];\r\n}\r\n\r\nconst initialState: stateTypes = {\r\n  purchase: [],\r\n};\r\n\r\nconst models = (\r\n  state = initialState,\r\n  action: PurchaseActionType\r\n): stateTypes => {\r\n  switch (action.type) {\r\n    case SET_PURCHASES: {\r\n      return {\r\n        ...state,\r\n        purchase: action.payload,\r\n      };\r\n    }\r\n    case SAVE_PURCHASES: {\r\n      const modifedPurchases = [...state.purchase];\r\n      const { index, price } = action.payload;\r\n      modifedPurchases[index].price = price;\r\n\r\n      return {\r\n        ...state,\r\n        purchase: modifedPurchases,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default models;\r\n","import {\r\n  SET_PRODUCTION,\r\n  SET_PRODUCTION_STATUS,\r\n  ProductionActionType,\r\n  ProductionData,\r\n  ProductionTypes,\r\n  ProductionItemTypes,\r\n} from \"../../types\";\r\n\r\ninterface StateTypes {\r\n  production: ProductionTypes;\r\n  status: any;\r\n}\r\n\r\nconst initialState: StateTypes = {\r\n  production: {},\r\n  status: {},\r\n};\r\n\r\nconst regexFirstGroupCode: RegExp = /^([0-9][0-9]*)\\./;\r\nconst regexSecondGroupCode: RegExp = /^([0-9][0-9]*\\.[0-9]*)/;\r\n\r\nconst groupData = (data: ProductionData[]) => {\r\n  const newData = data.map((item) => {\r\n    const firstGroup: string =\r\n      item.code.match(regexFirstGroupCode)![1] || \"all\";\r\n    const secondGroup: string =\r\n      item.code.match(regexSecondGroupCode)![1] || \"all\";\r\n\r\n    return {\r\n      ...item,\r\n      firstGroup,\r\n      secondGroup,\r\n    };\r\n  });\r\n\r\n  let groups = newData.reduce((r, a) => {\r\n    r[a.firstGroup] = r[a.firstGroup] || { values: [] };\r\n    r[a.firstGroup][\"values\"].push(a);\r\n    return r;\r\n  }, Object.create(null));\r\n\r\n  Object.keys(groups).forEach((key) => {\r\n    groups[key].values = groups[key].values.reduce(\r\n      (r: any, a: ProductionItemTypes) => {\r\n        r[a.secondGroup] = r[a.secondGroup] || { values: [] };\r\n        r[a.secondGroup][\"values\"].push(a);\r\n        return r;\r\n      },\r\n      Object.create(null)\r\n    );\r\n  });\r\n\r\n  return groups;\r\n};\r\n\r\nconst doCalculates = (arr: any) => {\r\n  return arr.reduce((r: number, a: { amount: string | number }) => {\r\n    r += +a.amount;\r\n    return r;\r\n  }, 0);\r\n};\r\n\r\nconst getSums = (data: any) => {\r\n  Object.keys(data).forEach((key1) => {\r\n    Object.keys(data[key1].values).forEach((key2) => {\r\n      const amount = doCalculates(data[key1].values[key2].values);\r\n\r\n      data[key1].values[key2] = {\r\n        values: data[key1].values[key2].values,\r\n        amount,\r\n      };\r\n    });\r\n\r\n    const arrKey2 = Object.keys(data[key1].values).map((key2) => {\r\n      const { amount } = data[key1].values[key2];\r\n      return { amount };\r\n    });\r\n\r\n    const amount = doCalculates(arrKey2);\r\n\r\n    data[key1] = {\r\n      values: data[key1].values,\r\n      amount,\r\n    };\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nconst getKeysObj = (obj: any) => {\r\n  let newObj = { status: false };\r\n  if (!Array.isArray(obj)) {\r\n    for (let key in obj) {\r\n      newObj = {\r\n        ...newObj,\r\n        [key]: getKeysObj(obj[key].values),\r\n      };\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n};\r\n\r\nconst products = (\r\n  state = initialState,\r\n  action: ProductionActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTION: {\r\n      const production = action.payload;\r\n      const groups = groupData(production);\r\n      const status = getKeysObj(groups);\r\n      const groupAndSum: ProductionTypes = getSums(groups);\r\n\r\n      return {\r\n        ...state,\r\n        production: groupAndSum,\r\n        status,\r\n      };\r\n    }\r\n    case SET_PRODUCTION_STATUS: {\r\n      const indexes = action.payload;\r\n      if (indexes.length === 2) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              [indexes[1]]: {\r\n                status: !state.status[indexes[0]][indexes[1]].status,\r\n              },\r\n            },\r\n          },\r\n        };\r\n      }\r\n      if (indexes.length === 1) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              status: !state.status[indexes[0]].status,\r\n            },\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default products;\r\n","import { SET_PRODUCTS, ProductsActionType, ProductsData } from \"../../types\";\r\n\r\ninterface StateTypes {\r\n  products: ProductsData[];\r\n}\r\n\r\nconst initialState: StateTypes = {\r\n  products: [],\r\n};\r\n\r\nconst products = (\r\n  state = initialState,\r\n  action: ProductsActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default products;\r\n","import { SET_STEP, StepsActionType } from \"../../types\";\r\n\r\ninterface stateTypes {\r\n  step: number;\r\n}\r\n\r\nconst initialState: stateTypes = {\r\n  step: 0,\r\n};\r\n\r\nconst steps = (state = initialState, action: StepsActionType): stateTypes => {\r\n  switch (action.type) {\r\n    case SET_STEP: {\r\n      return {\r\n        ...state,\r\n        step: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default steps;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport models from \"./models\";\r\nimport schemes from \"./schemes\";\r\nimport wishes from \"./wishes\";\r\nimport purchase from \"./purchase\";\r\nimport production from \"./production\";\r\nimport products from \"./products\";\r\nimport steps from \"./steps\";\r\n\r\nconst root = combineReducers({\r\n  models,\r\n  schemes,\r\n  wishes,\r\n  purchase,\r\n  production,\r\n  products,\r\n  steps,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof root>;\r\n\r\nexport default root;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport root from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(root, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/coursework-vector\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}