{"version":3,"sources":["img/construction-black-24dp.svg","img/calculate-black-24dp.svg","components/CustomizedSteppers.tsx","components/CustomTooltip.tsx","config.ts","redux/actions/models.ts","types.ts","redux/actions/steps.ts","styles.ts","pages/Models.tsx","redux/reducers/models.ts","redux/reducers/schemes.ts","helpers/index.ts","redux/reducers/wishes.ts","redux/reducers/purchase.tsx","redux/reducers/production.ts","redux/reducers/products.ts","redux/reducers/steps.ts","redux/reducers/budget.ts","redux/reducers/add_model.ts","redux/reducers/index.ts","redux/store.ts","pages/AddModel.tsx","redux/actions/add_model.ts","pages/PowerBI.tsx","redux/actions/wishes.ts","components/Loader.tsx","pages/Wishes.tsx","redux/actions/purchase.tsx","pages/Purchase.tsx","redux/actions/production.ts","pages/Production.tsx","pages/Launch.tsx","redux/actions/products.ts","pages/SchemesWishes.tsx","redux/actions/budget.ts","pages/budget/components/BudgetWishes.tsx","pages/budget/components/BudgetProduction.tsx","pages/budget/components/BudgetPurchase.tsx","pages/budget/index.tsx","App.tsx","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","height","width","transform","x","y","d","_ref","svgRef","title","props","enableBackground","viewBox","ref","ForwardRef","forwardRef","ColorlibConnector","withStyles","alternativeLabel","top","active","backgroundColor","completed","line","border","borderRadius","StepConnector","useColorlibStepIconStyles","makeStyles","root","zIndex","color","display","justifyContent","alignItems","boxShadow","CustomizedSteppers","activeStep","useSelector","steps","step","ColorlibStepIcon","classes","icons","1","2","3","4","SvgIcon","component","ConstructionIcon","5","CalculateIcon","6","7","8","className","clsx","String","icon","Stepper","connector","map","label","Step","StepLabel","StepIconComponent","LongTextTooltip","theme","tooltip","maxWidth","fontSize","typography","pxToRem","Tooltip","CustomTooltip","API_HOST","getModels","dispatch","axios","get","then","models","data","setModels","type","payload","setStep","useStyles","margin","container","maxHeight","budgetTables","row","cursor","subrow","paddingLeft","emptyCell","padding","header","fontWeight","pagination","textField","input","toolBar","formControl","minWidth","columns","id","align","selectModels","Models","useDispatch","rows","useEffect","history","useHistory","Paper","TableContainer","Toolbar","Typography","variant","IconButton","aria-label","onClick","push","Table","stickyHeader","TableHead","TableRow","TableCell","column","TableBody","Fragment","value","initialState","state","action","schemes","expandOrCloseAll","status","open","openStatus","newOpenStatus","key1","key2","wishes","isOpen","request","FormData","scheme","loaded","groupData","regexFirstGroupCode","regexSecondGroupCode","groups","item","firstGroup","code","match","secondGroup","reduce","r","a","values","create","forEach","doCalculates","arr","mult","price","amount","getSumsAndAvg","averagePrice","arrKey2","getKeysObj","obj","newObj","Array","isArray","products","groupAndSum","indexes","index","key2Group","modifedValues","oldAmount","oldPrice","append","copyStateWishes","modifedState","purchase","modifedPurchases","selectedPurchase","production","getSums","modifedProducts","oldLastPrice","oldLastAmount","blocks","sell","add","budget","clients","addModel","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useAppSelector","AddModel","useState","method","setMethod","client","setClient","file","setFile","handleSubmit","e","preventDefault","url","headers","finally","onSubmit","Grid","spacing","xs","sm","FormControl","required","FormLabel","focused","RadioGroup","name","onChange","FormControlLabel","control","Radio","disabled","style","marginBottom","InputLabel","Select","labelId","MenuItem","files","hidden","Button","PowerBI","position","src","allowFullScreen","getWishes","setWishes","setWishesLoaded","setWishesStatus","args","clearWishesRequest","expandAllWishes","closeAllWishes","Loader","empty","content","repeat","_","Skeleton","Wishes","params","handleClick","editRow","setEditRow","handleChangeEditField","handleClickCancel","newRows","res","schemeID","size","colSpan","marginRight","toFixed","onValueChange","v","thousandSeparator","customInput","TextField","InputProps","suffix","saveWishes","handleClickSave","value1","value2","0","handleClickEditTable","getPurchases","model","changed","setPurchases","setPurchaseLoaded","Purchases","id2","PurchaceToolbar","URL","Clear","Done","savePurchase","handleClickEditRow","getProduction","setProduction","setProductionLoaded","setProductionStatus","expandAllProduction","closeAllProduction","ProductionToolbar","Production","NumberFormatCustom","inputRef","other","getInputRef","Launch","formatter","Intl","NumberFormat","formattedValue","format","intValueField","setIntValueField","interval","setInterval","setLoaded","replace","test","onChangeIntegerField","fullWidth","defaultValue","inputComponent","alert","CircularProgress","setProducts","clearProductsRequest","setProductsLoaded","EditTable","getProducts","last_volume","last_price","last_rent","curr_rent","isEditRow","setBlockSell","blocksSell","setBlockAdd","blocksAdd","expandAllSell","closeAllSell","columnsWishes","connect","wishesStatus","isOpenWishes","isOpenSell","sellStatus","setBlockSellStatus","getBlocksSell","sheme","handleClickArrowSells","handleClickArrowWishes","productionStatus","handleClickArrowProduction","columnsPurchase","getBlocksAdd","Budget","printRef","useRef","print","setPrint","printBudget","useReactToPrint","current","startIcon","Print","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","exact","path","Purchase","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.251d87ab.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  height: 8.48,\n  transform: \"matrix(0.7071 -0.7071 0.7071 0.7071 -6.8717 17.6255)\",\n  width: 3,\n  x: 16.34,\n  y: 12.87\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.5,10c1.93,0,3.5-1.57,3.5-3.5c0-0.58-0.16-1.12-0.41-1.6l-2.7,2.7L16.4,6.11l2.7-2.7C18.62,3.16,18.08,3,17.5,3 C15.57,3,14,4.57,14,6.5c0,0.41,0.08,0.8,0.21,1.16l-1.85,1.85l-1.78-1.78l0.71-0.71L9.88,5.61L12,3.49 c-1.17-1.17-3.07-1.17-4.24,0L4.22,7.03l1.41,1.41H2.81L2.1,9.15l3.54,3.54l0.71-0.71V9.15l1.41,1.41l0.71-0.71l1.78,1.78 l-7.41,7.41l2.12,2.12L16.34,9.79C16.7,9.92,17.09,10,17.5,10z\"\n})));\n\nvar SvgConstructionBlack24Dp = function SvgConstructionBlack24Dp(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgConstructionBlack24Dp, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/construction-black-24dp.192f3bb6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M13.03,7.06L14.09,6l1.41,1.41 L16.91,6l1.06,1.06l-1.41,1.41l1.41,1.41l-1.06,1.06L15.5,9.54l-1.41,1.41l-1.06-1.06l1.41-1.41L13.03,7.06z M6.25,7.72h5v1.5h-5 V7.72z M11.5,16h-2v2H8v-2H6v-1.5h2v-2h1.5v2h2V16z M18,17.25h-5v-1.5h5V17.25z M18,14.75h-5v-1.5h5V14.75z\"\n}));\n\nvar SvgCalculateBlack24Dp = function SvgCalculateBlack24Dp(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCalculateBlack24Dp, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/calculate-black-24dp.0330955c.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n  makeStyles,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  SvgIcon,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\n\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { ReactComponent as ConstructionIcon } from \"../img/construction-black-24dp.svg\";\r\nimport { ReactComponent as CalculateIcon } from \"../img/calculate-black-24dp.svg\";\r\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\n\r\nimport { StepIconProps } from \"@material-ui/core/StepIcon\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\n\r\nimport { StepStateTypes } from \"../types\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundColor: \"#a1343c\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundColor: \"#a1343c\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: 50,\r\n    height: 50,\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundColor: \"#a1343c\",\r\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundColor: \"#a1343c\",\r\n  },\r\n});\r\n\r\nconst CustomizedSteppers = () => {\r\n  const activeStep = useSelector(({ steps: { step } }: StepStateTypes) => step);\r\n\r\n  const steps = getSteps();\r\n\r\n  function getSteps() {\r\n    return [\r\n      \"Модели\",\r\n      \"Продажи\",\r\n      \"Закупки\",\r\n      \"Производство\",\r\n      \"Расчёт\",\r\n      \"Сравнение\",\r\n      \"Корректировка\",\r\n      \"Бюджет\",\r\n    ];\r\n  }\r\n\r\n  function ColorlibStepIcon(props: StepIconProps) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons: { [index: string]: React.ReactElement } = {\r\n      1: <AppsIcon />,\r\n      2: <ReceiptIcon />,\r\n      3: <ShoppingCartIcon />,\r\n      4: <SvgIcon component={ConstructionIcon} viewBox=\"0 0 24 24\" />,\r\n      5: <SvgIcon component={CalculateIcon} viewBox=\"0 0 24 24\" />,\r\n      6: <CompareArrowsIcon />,\r\n      7: <EditIcon />,\r\n      8: <AttachMoneyIcon />,\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n          [classes.completed]: completed,\r\n        })}\r\n      >\r\n        {icons[String(props.icon)]}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSteppers;\r\n","import React from \"react\";\r\nimport { Theme, Tooltip, withStyles } from \"@material-ui/core\";\r\n\r\nconst LongTextTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}))(Tooltip);\r\n\r\nconst CustomTooltip = (props: any) => {\r\n  return <LongTextTooltip {...props} />;\r\n};\r\n\r\nexport default CustomTooltip;\r\n","export const API_HOST: string = \"http://89.175.186.76:5001\";\r\nexport const API_PATH: string = \"api/v1\";\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport { SET_MODELS, ModelsActionTypes, ModelsData } from \"../../types\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getModels = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n> => (dispatch) => {\r\n  axios\r\n    .get(`${API_HOST}/${API_PATH}/model_list`)\r\n    .then(({ data: { models } }) => dispatch(setModels(models)));\r\n};\r\n\r\nexport const setModels = (models: ModelsData[]): ModelsActionTypes => ({\r\n  type: SET_MODELS,\r\n  payload: models,\r\n});\r\n\r\nexport const deleteModel = (\r\n  selected: number[]\r\n): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n  axios\r\n    .all(\r\n      selected.map((id: number) =>\r\n        axios.get(`${API_HOST}/${API_PATH}/${id}/delete`)\r\n      )\r\n    )\r\n    .then(() => dispatch(getModels()));\r\n};\r\n","import { RouteComponentProps } from \"react-router-dom\";\r\n\r\n//head cells types\r\n\r\nexport interface HeadCell {\r\n  readonly id: string;\r\n  disablePadding: boolean;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nexport type ColumnsTypes = {\r\n  id: keyof DataTypes;\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: \"right\";\r\n  editable?: boolean;\r\n  format?: (value: number | string) => string;\r\n};\r\n\r\n// data types\r\n\r\nexport type ModelsData = {\r\n  id: number;\r\n  client_id?: number;\r\n  amount?: string;\r\n  month?: string;\r\n  name?: string;\r\n  num?: number;\r\n  profit?: string;\r\n  stage?: number;\r\n  volume?: number;\r\n};\r\n\r\nexport type ShemesData = {\r\n  id: number;\r\n  profit?: string;\r\n  ts?: string;\r\n  type?: number;\r\n};\r\n\r\nexport type WishesData = {\r\n  id: number;\r\n  amount: string;\r\n  code: string;\r\n  name: string;\r\n  price: number;\r\n};\r\n\r\ntype GroupTypes = {\r\n  firstGroup: string;\r\n  secondGroup: string;\r\n};\r\n\r\nexport type StatusInfo = { status: boolean };\r\n\r\nexport type StatusType = Record<\r\n  string,\r\n  StatusInfo | Record<string, StatusInfo>\r\n>;\r\n\r\nexport type WishesItemTypes = WishesData & GroupTypes;\r\n\r\nexport type WishesTypes = {\r\n  [key1: string]: {\r\n    values: {\r\n      [key2: string]: {\r\n        values: WishesItemTypes[];\r\n        amount: number;\r\n        price: number;\r\n        averagePrice: number;\r\n      };\r\n    };\r\n    amount: number;\r\n    price: number;\r\n    averagePrice: number;\r\n  };\r\n};\r\n\r\nexport type PurchaseData = {\r\n  amount: string;\r\n  code: string;\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n};\r\n\r\nexport type ProductionItemTypes = ProductionData & GroupTypes;\r\n\r\nexport type ProductionTypes = {\r\n  [key1: string]: {\r\n    values: {\r\n      [key2: string]: {\r\n        values: ProductionItemTypes[];\r\n        amount: number;\r\n      };\r\n    };\r\n    amount: number;\r\n  };\r\n};\r\n\r\nexport type ProductionData = {\r\n  amount: string;\r\n  code: string;\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport type ProductsData = {\r\n  id: number;\r\n  amount: string;\r\n  code: string;\r\n  curr_cost: number;\r\n  curr_rent: number;\r\n  last_cost: number;\r\n  last_price: number;\r\n  last_rent: number;\r\n  last_volume: string;\r\n  name: string;\r\n  price: number;\r\n};\r\n\r\nexport type DataTypes = ModelsData & ShemesData & ProductsData;\r\n\r\nexport type BlocksData = {\r\n  amount: string;\r\n  code: string;\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n};\r\n\r\n// state types\r\n\r\nexport interface SchemesStateTypes {\r\n  schemes: {\r\n    schemes: ShemesData[];\r\n  };\r\n}\r\n\r\nexport interface StepStateTypes {\r\n  steps: {\r\n    step: number;\r\n  };\r\n}\r\n\r\n// match types\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n  id2?: string;\r\n  changed?: \"0\" | \"1\";\r\n}\r\n\r\nexport interface MatchProps extends RouteComponentProps<MatchParams> {}\r\n\r\n// models\r\n\r\nexport const SET_MODELS = \"SET_MODELS\";\r\n\r\ninterface SetModelsAction {\r\n  type: typeof SET_MODELS;\r\n  payload: ModelsData[];\r\n}\r\n\r\nexport type ModelsActionTypes = SetModelsAction;\r\n\r\n// schemes\r\n\r\nexport const SET_SCHEMES = \"SET_SCHEMES\";\r\n\r\ninterface SetSchemesAction {\r\n  type: typeof SET_SCHEMES;\r\n  payload: ShemesData[];\r\n}\r\n\r\nexport type SchemesActionType = SetSchemesAction;\r\n\r\n// wishes\r\n\r\nexport const SET_WISHES = \"SET_WISHES\";\r\nexport const SET_WISHES_STATUS = \"SET_WISHES_STATUS\";\r\nexport const SAVE_WISHES = \"SAVE_WISHES\";\r\nexport const CLEAR_WISHES_REQUEST = \"CLEAR_WISHES_REQUEST\";\r\nexport const EXPAND_ALL_WISHES = \"EXPAND_ALL_WISHES\";\r\nexport const CLOSE_ALL_WISHES = \"CLOSE_ALL_WISHES\";\r\nexport const SET_WISHES_LOADED = \"SET_WISHES_LOADED\";\r\n\r\nexport interface SetWishesPayload {\r\n  wishes: WishesData[];\r\n  scheme: number;\r\n}\r\n\r\ninterface SetWishesAction {\r\n  type: typeof SET_WISHES;\r\n  payload: SetWishesPayload;\r\n}\r\n\r\ninterface SetStatusAction {\r\n  type: typeof SET_WISHES_STATUS;\r\n  payload: string[];\r\n}\r\n\r\ninterface ClearWishesRequest {\r\n  type: typeof CLEAR_WISHES_REQUEST;\r\n}\r\n\r\ninterface ExpandAllWishes {\r\n  type: typeof EXPAND_ALL_WISHES;\r\n}\r\n\r\ninterface CloseAllWishes {\r\n  type: typeof CLOSE_ALL_WISHES;\r\n}\r\n\r\ninterface SetWishesLoaded {\r\n  type: typeof SET_WISHES_LOADED;\r\n  payload: boolean;\r\n}\r\n\r\nexport interface SaveWishesPayloadTypes {\r\n  id: number;\r\n  key1: string;\r\n  key2: string;\r\n  amount: string;\r\n  price: string;\r\n  index: number;\r\n}\r\n\r\ninterface SaveWishesAction {\r\n  type: typeof SAVE_WISHES;\r\n  payload: SaveWishesPayloadTypes;\r\n}\r\n\r\nexport type WishesActionType =\r\n  | SetWishesAction\r\n  | SetStatusAction\r\n  | SaveWishesAction\r\n  | ClearWishesRequest\r\n  | ExpandAllWishes\r\n  | CloseAllWishes\r\n  | SetWishesLoaded;\r\n\r\n// purchase\r\n\r\nexport const SET_PURCHASES = \"SET_PURCHASE\";\r\nexport const SAVE_PURCHASES = \"SAVE_PURCHASE\";\r\nexport const CLEAR_PURCHASE_REQUEST = \"CLEAR_PURCHASE_REQUEST\";\r\nexport const SET_PURCHASE_LOADED = \"SET_PURCHASE_LOADED\";\r\n\r\ninterface SetPurchaseAction {\r\n  type: typeof SET_PURCHASES;\r\n  payload: PurchaseData[];\r\n}\r\n\r\nexport type SavePurchasePayloadTypes = {\r\n  index: number;\r\n  price: number;\r\n};\r\n\r\ninterface SavePurchaseAction {\r\n  type: typeof SAVE_PURCHASES;\r\n  payload: SavePurchasePayloadTypes;\r\n}\r\n\r\nexport type ClearPurchaseRequest = {\r\n  type: typeof CLEAR_PURCHASE_REQUEST;\r\n};\r\n\r\ninterface SetPurchaseLoaded {\r\n  type: typeof SET_PURCHASE_LOADED;\r\n  payload: boolean;\r\n}\r\n\r\nexport type PurchaseActionType =\r\n  | SetPurchaseAction\r\n  | SavePurchaseAction\r\n  | ClearPurchaseRequest\r\n  | SetPurchaseLoaded;\r\n\r\n// production\r\n\r\nexport const SET_PRODUCTION = \"SET_PRODUCTION\";\r\nexport const SET_PRODUCTION_STATUS = \"SET_PRODUCTION_STATUS\";\r\nexport const EXPAND_ALL_PRODUCTION = \"EXPAND_ALL_PRODUCTION\";\r\nexport const CLOSE_ALL_PRODUCTION = \"CLOSE_ALL_PRODUCTION\";\r\nexport const SET_PRODUCTION_LOADED = \"SET_PRODUCTION_LOADED\";\r\n\r\ntype SetProductionAction = {\r\n  type: typeof SET_PRODUCTION;\r\n  payload: ProductionData[];\r\n};\r\n\r\ntype SetStatusProductionAction = {\r\n  type: typeof SET_PRODUCTION_STATUS;\r\n  payload: string[];\r\n};\r\n\r\ntype ExpandAllProduction = {\r\n  type: typeof EXPAND_ALL_PRODUCTION;\r\n};\r\n\r\ntype CloseAllProduction = {\r\n  type: typeof CLOSE_ALL_PRODUCTION;\r\n};\r\n\r\ntype SetProductionLoaded = {\r\n  type: typeof SET_PRODUCTION_LOADED;\r\n  payload: boolean;\r\n};\r\n\r\nexport type ProductionActionType =\r\n  | SetProductionAction\r\n  | SetStatusProductionAction\r\n  | ExpandAllProduction\r\n  | CloseAllProduction\r\n  | SetProductionLoaded;\r\n\r\n// products\r\n\r\nexport const SET_PRODUCTS = \"SET_PRODUCTS\";\r\nexport const SAVE_PRODUCTS = \"SAVE_PRODUCTS\";\r\nexport const CLEAR_PRODUCTS_REQUEST = \"CLEAR_PRODUCTS_REQUEST\";\r\nexport const SET_PRODUCTS_LOADED = \"SET_PRODUCTS_LOADED\";\r\n\r\ninterface SetPropductsAction {\r\n  type: typeof SET_PRODUCTS;\r\n  payload: ProductsData[];\r\n}\r\n\r\nexport type PayloadSaveProductsAction = {\r\n  index: number;\r\n  values: {\r\n    price: number;\r\n    amount: number;\r\n  };\r\n};\r\n\r\ntype SaveProductsAction = {\r\n  type: typeof SAVE_PRODUCTS;\r\n  payload: PayloadSaveProductsAction;\r\n};\r\n\r\ntype ClearProductsRequest = {\r\n  type: typeof CLEAR_PRODUCTS_REQUEST;\r\n};\r\n\r\ntype SetProductsLoaded = {\r\n  type: typeof SET_PRODUCTS_LOADED;\r\n  payload: boolean;\r\n};\r\n\r\nexport type ProductsActionType =\r\n  | SetPropductsAction\r\n  | SaveProductsAction\r\n  | ClearProductsRequest\r\n  | SetProductsLoaded;\r\n\r\n// steps\r\n\r\nexport const SET_STEP = \"SET_STEP\";\r\n\r\ninterface SetStepAction {\r\n  type: typeof SET_STEP;\r\n  payload: number;\r\n}\r\n\r\nexport type StepsActionType = SetStepAction;\r\n\r\n// budget\r\n\r\nexport const SET_BLOCKS_SELL = \"SET_BLOCKS_SELL\";\r\nexport const SET_BLOCKS_SELL_STATUS = \"SET_BLOCKS_SELL_STATUS\";\r\nexport const SET_BLOCKS_ADD = \"SET_BLOCKS_ADD\";\r\nexport const EXPAND_ALL_SELL = \"EXPAND_ALL_SELL\";\r\nexport const CLOSE_ALL_SELL = \"CLOSE_ALL_SELL\";\r\n\r\ntype SetBlocksSellAction = {\r\n  type: typeof SET_BLOCKS_SELL;\r\n  payload: WishesData[];\r\n};\r\n\r\ntype SetBlocksAddAction = {\r\n  type: typeof SET_BLOCKS_ADD;\r\n  payload: BlocksData[];\r\n};\r\n\r\ntype SetBlocksSellStatus = {\r\n  type: typeof SET_BLOCKS_SELL_STATUS;\r\n  payload: string[];\r\n};\r\n\r\ntype ExpandAllSell = {\r\n  type: typeof EXPAND_ALL_SELL;\r\n};\r\n\r\ntype CloseAllSell = {\r\n  type: typeof CLOSE_ALL_SELL;\r\n};\r\n\r\nexport type BudgetActionTypes =\r\n  | SetBlocksSellAction\r\n  | SetBlocksAddAction\r\n  | SetBlocksSellStatus\r\n  | ExpandAllSell\r\n  | CloseAllSell;\r\n\r\n// clients\r\n\r\nexport type Client = {\r\n  id: string;\r\n  name: string;\r\n};\r\n\r\nexport const SET_CLIENTS = \"SET_CLIENTS\";\r\n\r\ntype SetClient = {\r\n  type: typeof SET_CLIENTS;\r\n  payload: Client[];\r\n};\r\n\r\nexport type AddModelTypes = SetClient;\r\n","import { SET_STEP, StepsActionType } from \"../../types\";\r\n\r\nexport const setStep = (step: number): StepsActionType => ({\r\n  type: SET_STEP,\r\n  payload: step,\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"1000px\",\r\n    margin: \"0 auto\",\r\n  },\r\n  container: {\r\n    maxHeight: \"580px\",\r\n    height: \"calc(100vh - 150px)\",\r\n  },\r\n  budgetTables: {\r\n    width: \"100%\",\r\n    maxWidth: \"1000px\",\r\n    margin: \"0 auto 30px\",\r\n  },\r\n  row: {\r\n    cursor: \"pointer\",\r\n  },\r\n  subrow: {\r\n    paddingLeft: \"50px\",\r\n  },\r\n  emptyCell: {\r\n    width: \"48px\",\r\n    padding: 0,\r\n  },\r\n  header: {\r\n    fontWeight: 700,\r\n  },\r\n  pagination: {\r\n    backgroundColor: \"rgb(161, 52, 60)\",\r\n    color: \"white\",\r\n  },\r\n  textField: {\r\n    width: \"80px\",\r\n  },\r\n  input: {\r\n    width: \"100px\",\r\n  },\r\n  toolBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport { getModels } from \"../redux/actions/models\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\nimport { ModelsData } from \"../types\";\r\n\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Typography,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport { useStyles } from \"../styles\";\r\n\r\ntype ColumnsTypes = {\r\n  id: keyof ModelsData;\r\n  label: string;\r\n  align?: \"right\";\r\n};\r\n\r\nconst columns: ColumnsTypes[] = [\r\n  { id: \"name\", label: \"Клиент\" },\r\n  { id: \"month\", label: \"Месяц\" },\r\n  { id: \"stage\", align: \"right\", label: \"Стадия\" },\r\n  { id: \"num\", align: \"right\", label: \"Позиций\" },\r\n  {\r\n    id: \"profit\",\r\n    align: \"right\",\r\n    label: \"Прибыль (тыс. руб.)\",\r\n  },\r\n];\r\n\r\ninterface ModelsState {\r\n  models: {\r\n    models: ModelsData[];\r\n  };\r\n}\r\n\r\nconst selectModels = ({ models: { models } }: ModelsState) => models;\r\n\r\nexport default function Models() {\r\n  const classes = useStyles();\r\n\r\n  // load models\r\n  const dispatch = useDispatch();\r\n\r\n  const rows = useSelector(selectModels);\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(0));\r\n    dispatch(getModels());\r\n  }, [dispatch]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleWishesClick = (id: number) => {\r\n    history.push(`/${id}/wishes`);\r\n  };\r\n\r\n  const handlePowerBIClick = () => {\r\n    history.push(\"/power_bi\");\r\n  };\r\n\r\n  const handleAddModelClick = () => {\r\n    history.push(\"/add_model\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Список доступных моделей\r\n          </Typography>\r\n          <div className=\"right-side\">\r\n            <CustomTooltip title=\"Добавить модель\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"add model\"\r\n                onClick={handleAddModelClick}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip title=\"Сравнение\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Power BI\"\r\n                onClick={handlePowerBIClick}\r\n              >\r\n                <AssessmentIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </div>\r\n        </Toolbar>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell align=\"center\">Действия</TableCell>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => {\r\n              return (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align=\"center\">\r\n                    <CustomTooltip\r\n                      title={<React.Fragment>Продажи</React.Fragment>}\r\n                    >\r\n                      <IconButton\r\n                        onClick={() => handleWishesClick(row.id)}\r\n                        color=\"secondary\"\r\n                        aria-label=\"go to step 2\"\r\n                      >\r\n                        <ReceiptIcon />\r\n                      </IconButton>\r\n                    </CustomTooltip>\r\n                  </TableCell>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id] || 0;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n","import { ModelsData, SET_MODELS, ModelsActionTypes } from \"../../types\";\r\n\r\ninterface stateTypes {\r\n  models: ModelsData[];\r\n}\r\n\r\nconst initialState: stateTypes = {\r\n  models: [],\r\n};\r\n\r\nconst models = (\r\n  state = initialState,\r\n  action: ModelsActionTypes\r\n): stateTypes => {\r\n  switch (action.type) {\r\n    case SET_MODELS: {\r\n      return {\r\n        ...state,\r\n        models: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default models;\r\n","import { SET_SCHEMES, ShemesData, SchemesActionType } from \"../../types\";\r\n\r\ninterface StateTypes {\r\n  schemes: ShemesData[];\r\n}\r\n\r\nconst initialState: StateTypes = {\r\n  schemes: [],\r\n};\r\n\r\nconst schemes = (\r\n  state = initialState,\r\n  action: SchemesActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_SCHEMES: {\r\n      return {\r\n        ...state,\r\n        schemes: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default schemes;\r\n","type StatusInfo = Readonly<{\r\n  status: boolean;\r\n}>;\r\n\r\nconst expandOrCloseAll = (status: any, open: boolean = true) => {\r\n  const openStatus: StatusInfo = { status: open };\r\n  const newOpenStatus = Object.assign({});\r\n\r\n  for (let key1 in status) {\r\n    if (key1 !== \"status\") {\r\n      newOpenStatus[key1] = openStatus;\r\n      for (let key2 in status[key1]) {\r\n        if (key2 !== \"status\") {\r\n          newOpenStatus[key1][key2] = openStatus;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return newOpenStatus;\r\n};\r\n\r\nexport { expandOrCloseAll };\r\n","import { expandOrCloseAll } from \"../../helpers\";\r\nimport {\r\n  SET_WISHES,\r\n  SET_WISHES_STATUS,\r\n  SAVE_WISHES,\r\n  CLEAR_WISHES_REQUEST,\r\n  WishesActionType,\r\n  WishesData,\r\n  WishesItemTypes,\r\n  WishesTypes,\r\n  EXPAND_ALL_WISHES,\r\n  CLOSE_ALL_WISHES,\r\n  SET_WISHES_LOADED,\r\n} from \"../../types\";\r\n\r\ntype StateTypes = {\r\n  wishes: WishesTypes;\r\n  status: any;\r\n  isOpen: boolean;\r\n  request: FormData;\r\n  scheme: number;\r\n  loaded: boolean;\r\n};\r\n\r\nconst initialState: StateTypes = {\r\n  wishes: {},\r\n  status: {},\r\n  isOpen: false,\r\n  request: new FormData(),\r\n  scheme: 1315,\r\n  loaded: true,\r\n};\r\n\r\nexport const groupData = (data: WishesData[]) => {\r\n  const regexFirstGroupCode: RegExp = /^([0-9][0-9]*)\\./;\r\n  const regexSecondGroupCode: RegExp = /^([0-9][0-9]*\\.[0-9]*)/;\r\n\r\n  const newData = data.map((item) => {\r\n    const firstGroup: string =\r\n      item.code.match(regexFirstGroupCode)![1] || \"all\";\r\n    const secondGroup: string =\r\n      item.code.match(regexSecondGroupCode)![1] || \"all\";\r\n\r\n    return {\r\n      ...item,\r\n      firstGroup,\r\n      secondGroup,\r\n    };\r\n  });\r\n\r\n  let groups = newData.reduce((r, a) => {\r\n    r[a.firstGroup] = r[a.firstGroup] || { values: [] };\r\n    r[a.firstGroup][\"values\"].push(a);\r\n    return r;\r\n  }, Object.create(null));\r\n\r\n  Object.keys(groups).forEach((key) => {\r\n    groups[key].values = groups[key].values.reduce(\r\n      (r: any, a: WishesItemTypes) => {\r\n        r[a.secondGroup] = r[a.secondGroup] || { values: [] };\r\n        r[a.secondGroup][\"values\"].push(a);\r\n        return r;\r\n      },\r\n      Object.create(null)\r\n    );\r\n  });\r\n\r\n  return groups;\r\n};\r\n\r\nexport type ValuesTypes = {\r\n  amount: number;\r\n  price: number;\r\n  mult: number;\r\n};\r\n\r\nexport const doCalculates = (arr: any) => {\r\n  return arr.reduce(\r\n    (r: ValuesTypes, a: { price: number; amount: string | number }) => {\r\n      r.mult += a.price * +a.amount;\r\n      r.price += a.price;\r\n      r.amount += +a.amount;\r\n      return r;\r\n    },\r\n    {\r\n      amount: 0,\r\n      price: 0,\r\n      mult: 0,\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSumsAndAvg = (data: any) => {\r\n  Object.keys(data).forEach((key1) => {\r\n    Object.keys(data[key1].values).forEach((key2) => {\r\n      const { amount, price, mult } = doCalculates(\r\n        data[key1].values[key2].values\r\n      );\r\n\r\n      data[key1].values[key2] = {\r\n        values: data[key1].values[key2].values,\r\n        price,\r\n        amount,\r\n        averagePrice: amount ? mult / amount : 0,\r\n      };\r\n    });\r\n\r\n    const arrKey2 = Object.keys(data[key1].values).map((key2) => {\r\n      const { amount, averagePrice: price } = data[key1].values[key2];\r\n      return { amount, price };\r\n    });\r\n\r\n    const { amount, price, mult } = doCalculates(arrKey2);\r\n\r\n    data[key1] = {\r\n      values: data[key1].values,\r\n      price,\r\n      amount,\r\n      averagePrice: mult / amount,\r\n    };\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nexport const getKeysObj = (obj: any, open: boolean = false) => {\r\n  let newObj = { status: open };\r\n  if (!Array.isArray(obj)) {\r\n    for (let key in obj) {\r\n      newObj = {\r\n        ...newObj,\r\n        [key]: getKeysObj(obj[key].values),\r\n      };\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n};\r\n\r\nconst products = (\r\n  state = initialState,\r\n  action: WishesActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_WISHES: {\r\n      const { wishes, scheme } = action.payload;\r\n      const groups = groupData(wishes);\r\n      const status = getKeysObj(groups);\r\n      const groupAndSum: WishesTypes = getSumsAndAvg(groups);\r\n\r\n      return {\r\n        ...state,\r\n        wishes: groupAndSum,\r\n        status,\r\n        scheme,\r\n      };\r\n    }\r\n    case SET_WISHES_STATUS: {\r\n      const indexes = action.payload;\r\n      if (indexes.length === 2) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              [indexes[1]]: {\r\n                status: !state.status[indexes[0]][indexes[1]].status,\r\n              },\r\n            },\r\n          },\r\n        };\r\n      }\r\n      if (indexes.length === 1) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              status: !state.status[indexes[0]].status,\r\n            },\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case EXPAND_ALL_WISHES: {\r\n      return {\r\n        ...state,\r\n        status: expandOrCloseAll(state.status),\r\n        isOpen: true,\r\n      };\r\n    }\r\n    case CLOSE_ALL_WISHES: {\r\n      return {\r\n        ...state,\r\n        status: expandOrCloseAll(state.status, false),\r\n        isOpen: false,\r\n      };\r\n    }\r\n    case SET_WISHES_LOADED: {\r\n      return {\r\n        ...state,\r\n        loaded: action.payload,\r\n      };\r\n    }\r\n    case SAVE_WISHES: {\r\n      const { id, key1, key2, amount, price, index } = action.payload;\r\n\r\n      const key2Group = state.wishes[key1].values[key2].values;\r\n\r\n      const modifedValues = [...key2Group];\r\n      const { amount: oldAmount, price: oldPrice } = modifedValues[index];\r\n\r\n      if (amount === oldAmount && \"\" + oldPrice === price) {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n\r\n      // формируем FormData для POST запроса\r\n      state.request.append(`${id}_amount`, amount);\r\n      state.request.append(`${id}_price`, price);\r\n\r\n      const copyStateWishes = { ...state.wishes };\r\n      let modifedState = copyStateWishes[key1].values[key2].values[index];\r\n      modifedState.price = +price;\r\n      modifedState.amount = amount;\r\n\r\n      return {\r\n        ...state,\r\n        wishes: getSumsAndAvg(copyStateWishes),\r\n      };\r\n    }\r\n    case CLEAR_WISHES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        request: new FormData(),\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default products;\r\n","import {\r\n  SET_PURCHASES,\r\n  SAVE_PURCHASES,\r\n  PurchaseActionType,\r\n  PurchaseData,\r\n  CLEAR_PURCHASE_REQUEST,\r\n  SET_PURCHASE_LOADED,\r\n} from \"../../types\";\r\n\r\ninterface stateTypes {\r\n  purchase: PurchaseData[];\r\n  request: FormData;\r\n  loaded: boolean;\r\n}\r\n\r\nconst initialState: stateTypes = {\r\n  purchase: [],\r\n  request: new FormData(),\r\n  loaded: true,\r\n};\r\n\r\nconst models = (\r\n  state = initialState,\r\n  action: PurchaseActionType\r\n): stateTypes => {\r\n  switch (action.type) {\r\n    case SET_PURCHASES: {\r\n      return {\r\n        ...state,\r\n        purchase: action.payload,\r\n      };\r\n    }\r\n    case SET_PURCHASE_LOADED: {\r\n      return {\r\n        ...state,\r\n        loaded: action.payload,\r\n      };\r\n    }\r\n    case SAVE_PURCHASES: {\r\n      const modifedPurchases = [...state.purchase];\r\n      const { index, price } = action.payload;\r\n      const selectedPurchase = modifedPurchases[index];\r\n\r\n      const oldPrice = selectedPurchase.price;\r\n      if (oldPrice === price) {\r\n        return { ...state };\r\n      }\r\n\r\n      // Заполняем request\r\n      state.request.append(`${selectedPurchase.id}`, \"\" + price);\r\n\r\n      selectedPurchase.price = price;\r\n\r\n      return {\r\n        ...state,\r\n        purchase: modifedPurchases,\r\n      };\r\n    }\r\n    case CLEAR_PURCHASE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        request: new FormData(),\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default models;\r\n","import { expandOrCloseAll } from \"../../helpers\";\r\nimport {\r\n  SET_PRODUCTION,\r\n  SET_PRODUCTION_STATUS,\r\n  ProductionActionType,\r\n  ProductionData,\r\n  ProductionTypes,\r\n  ProductionItemTypes,\r\n  EXPAND_ALL_PRODUCTION,\r\n  CLOSE_ALL_PRODUCTION,\r\n  SET_PRODUCTION_LOADED,\r\n} from \"../../types\";\r\n\r\ninterface StateTypes {\r\n  production: ProductionTypes;\r\n  status: any;\r\n  isOpen: boolean;\r\n  loaded: boolean;\r\n}\r\n\r\nconst initialState: StateTypes = {\r\n  production: {},\r\n  status: {},\r\n  isOpen: false,\r\n  loaded: true,\r\n};\r\n\r\nconst regexFirstGroupCode: RegExp = /^([0-9][0-9]*)\\./;\r\nconst regexSecondGroupCode: RegExp = /^([0-9][0-9]*\\.[0-9]*)/;\r\n\r\nconst groupData = (data: ProductionData[]) => {\r\n  const newData = data.map((item) => {\r\n    const firstGroup: string =\r\n      item.code.match(regexFirstGroupCode)![1] || \"all\";\r\n    const secondGroup: string =\r\n      item.code.match(regexSecondGroupCode)![1] || \"all\";\r\n\r\n    return {\r\n      ...item,\r\n      firstGroup,\r\n      secondGroup,\r\n    };\r\n  });\r\n\r\n  let groups = newData.reduce((r, a) => {\r\n    r[a.firstGroup] = r[a.firstGroup] || { values: [] };\r\n    r[a.firstGroup][\"values\"].push(a);\r\n    return r;\r\n  }, Object.create(null));\r\n\r\n  Object.keys(groups).forEach((key) => {\r\n    groups[key].values = groups[key].values.reduce(\r\n      (r: any, a: ProductionItemTypes) => {\r\n        r[a.secondGroup] = r[a.secondGroup] || { values: [] };\r\n        r[a.secondGroup][\"values\"].push(a);\r\n        return r;\r\n      },\r\n      Object.create(null)\r\n    );\r\n  });\r\n\r\n  return groups;\r\n};\r\n\r\nconst doCalculates = (arr: any) => {\r\n  return arr.reduce((r: number, a: { amount: string | number }) => {\r\n    r += +a.amount;\r\n    return r;\r\n  }, 0);\r\n};\r\n\r\nconst getSums = (data: any) => {\r\n  Object.keys(data).forEach((key1) => {\r\n    Object.keys(data[key1].values).forEach((key2) => {\r\n      const amount = doCalculates(data[key1].values[key2].values);\r\n\r\n      data[key1].values[key2] = {\r\n        values: data[key1].values[key2].values,\r\n        amount,\r\n      };\r\n    });\r\n\r\n    const arrKey2 = Object.keys(data[key1].values).map((key2) => {\r\n      const { amount } = data[key1].values[key2];\r\n      return { amount };\r\n    });\r\n\r\n    const amount = doCalculates(arrKey2);\r\n\r\n    data[key1] = {\r\n      values: data[key1].values,\r\n      amount,\r\n    };\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nconst getKeysObj = (obj: any) => {\r\n  let newObj = { status: false };\r\n  if (!Array.isArray(obj)) {\r\n    for (let key in obj) {\r\n      newObj = {\r\n        ...newObj,\r\n        [key]: getKeysObj(obj[key].values),\r\n      };\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n};\r\n\r\nconst production = (\r\n  state = initialState,\r\n  action: ProductionActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTION: {\r\n      const production = action.payload;\r\n      const groups = groupData(production);\r\n      const status = getKeysObj(groups);\r\n      const groupAndSum: ProductionTypes = getSums(groups);\r\n\r\n      return {\r\n        ...state,\r\n        production: groupAndSum,\r\n        status,\r\n      };\r\n    }\r\n    case SET_PRODUCTION_STATUS: {\r\n      const indexes = action.payload;\r\n      if (indexes.length === 2) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              [indexes[1]]: {\r\n                status: !state.status[indexes[0]][indexes[1]].status,\r\n              },\r\n            },\r\n          },\r\n        };\r\n      }\r\n      if (indexes.length === 1) {\r\n        return {\r\n          ...state,\r\n          status: {\r\n            ...state.status,\r\n            [indexes[0]]: {\r\n              ...state.status[indexes[0]],\r\n              status: !state.status[indexes[0]].status,\r\n            },\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SET_PRODUCTION_LOADED: {\r\n      return {\r\n        ...state,\r\n        loaded: action.payload,\r\n      };\r\n    }\r\n    case EXPAND_ALL_PRODUCTION: {\r\n      return {\r\n        ...state,\r\n        status: expandOrCloseAll(state.status),\r\n        isOpen: true,\r\n      };\r\n    }\r\n    case CLOSE_ALL_PRODUCTION: {\r\n      return {\r\n        ...state,\r\n        status: expandOrCloseAll(state.status, false),\r\n        isOpen: false,\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default production;\r\n","import {\r\n  SET_PRODUCTS,\r\n  SAVE_PRODUCTS,\r\n  CLEAR_PRODUCTS_REQUEST,\r\n  ProductsActionType,\r\n  ProductsData,\r\n  SET_PRODUCTS_LOADED,\r\n} from \"../../types\";\r\n\r\ninterface StateTypes {\r\n  products: ProductsData[];\r\n  request: FormData;\r\n  loaded: boolean;\r\n}\r\n\r\nconst initialState: StateTypes = {\r\n  products: [],\r\n  request: new FormData(),\r\n  loaded: true,\r\n};\r\n\r\nconst products = (\r\n  state = initialState,\r\n  action: ProductsActionType\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    }\r\n    case SAVE_PRODUCTS: {\r\n      const {\r\n        index,\r\n        values: { price, amount },\r\n      } = action.payload;\r\n      const modifedProducts = [...state.products];\r\n      const { price: oldLastPrice, amount: oldLastAmount } =\r\n        modifedProducts[index];\r\n\r\n      if (oldLastPrice === price && +oldLastAmount === amount) {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n\r\n      // создаём request\r\n\r\n      state.request.append(`${modifedProducts[index].id}_price`, \"\" + price);\r\n      state.request.append(`${modifedProducts[index].id}_amount`, \"\" + amount);\r\n\r\n      modifedProducts[index] = {\r\n        ...modifedProducts[index],\r\n        amount: \"\" + amount,\r\n        price,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        products: modifedProducts,\r\n      };\r\n    }\r\n    case SET_PRODUCTS_LOADED: {\r\n      return {\r\n        ...state,\r\n        loaded: action.payload,\r\n      };\r\n    }\r\n    case CLEAR_PRODUCTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        request: new FormData(),\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default products;\r\n","import { SET_STEP, StepsActionType } from \"../../types\";\r\n\r\ninterface stateTypes {\r\n  step: number;\r\n}\r\n\r\nconst initialState: stateTypes = {\r\n  step: 0,\r\n};\r\n\r\nconst steps = (state = initialState, action: StepsActionType): stateTypes => {\r\n  switch (action.type) {\r\n    case SET_STEP: {\r\n      return {\r\n        ...state,\r\n        step: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default steps;\r\n","import { expandOrCloseAll } from \"../../helpers\";\r\nimport {\r\n  SET_BLOCKS_SELL,\r\n  SET_BLOCKS_SELL_STATUS,\r\n  SET_BLOCKS_ADD,\r\n  BlocksData,\r\n  BudgetActionTypes,\r\n  WishesTypes,\r\n  EXPAND_ALL_SELL,\r\n  CLOSE_ALL_SELL,\r\n} from \"../../types\";\r\nimport { getKeysObj, getSumsAndAvg, groupData } from \"./wishes\";\r\n\r\ntype StateTypes = {\r\n  blocks: {\r\n    add: BlocksData[];\r\n    sell: {\r\n      values: WishesTypes;\r\n      status: any;\r\n      isOpen: boolean;\r\n    };\r\n  };\r\n};\r\n\r\nconst initialState: StateTypes = {\r\n  blocks: {\r\n    sell: {\r\n      values: {},\r\n      status: {},\r\n      isOpen: false,\r\n    },\r\n    add: [],\r\n  },\r\n};\r\n\r\nconst budget = (\r\n  state = initialState,\r\n  action: BudgetActionTypes\r\n): StateTypes => {\r\n  switch (action.type) {\r\n    case SET_BLOCKS_SELL: {\r\n      const sell = action.payload.map((row) => ({\r\n        ...row,\r\n        price: +row.price,\r\n      }));\r\n      const groups = groupData(sell);\r\n      const status = getKeysObj(groups);\r\n      const groupAndSum: WishesTypes = getSumsAndAvg(groups);\r\n      return {\r\n        ...state,\r\n        blocks: {\r\n          ...state.blocks,\r\n          sell: {\r\n            ...state.blocks.sell,\r\n            values: groupAndSum,\r\n            status,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case SET_BLOCKS_ADD: {\r\n      return {\r\n        ...state,\r\n        blocks: {\r\n          ...state.blocks,\r\n          add: action.payload,\r\n        },\r\n      };\r\n    }\r\n    case SET_BLOCKS_SELL_STATUS: {\r\n      const indexes = action.payload;\r\n      if (indexes.length === 2) {\r\n        return {\r\n          ...state,\r\n          blocks: {\r\n            ...state.blocks,\r\n            sell: {\r\n              ...state.blocks.sell,\r\n              status: {\r\n                ...state.blocks.sell.status,\r\n                [indexes[0]]: {\r\n                  ...state.blocks.sell.status[indexes[0]],\r\n                  [indexes[1]]: {\r\n                    status:\r\n                      !state.blocks.sell.status[indexes[0]][indexes[1]].status,\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        };\r\n      }\r\n      if (indexes.length === 1) {\r\n        return {\r\n          ...state,\r\n          blocks: {\r\n            ...state.blocks,\r\n            sell: {\r\n              ...state.blocks.sell,\r\n              status: {\r\n                ...state.blocks.sell.status,\r\n                [indexes[0]]: {\r\n                  ...state.blocks.sell.status[indexes[0]],\r\n                  status: !state.blocks.sell.status[indexes[0]].status,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case EXPAND_ALL_SELL: {\r\n      return {\r\n        ...state,\r\n        blocks: {\r\n          ...state.blocks,\r\n          sell: {\r\n            ...state.blocks.sell,\r\n            status: expandOrCloseAll(state.blocks.sell.status),\r\n            isOpen: true,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case CLOSE_ALL_SELL: {\r\n      return {\r\n        ...state,\r\n        blocks: {\r\n          ...state.blocks,\r\n          sell: {\r\n            ...state.blocks.sell,\r\n            status: expandOrCloseAll(state.blocks.sell.status, false),\r\n            isOpen: false,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default budget;\r\n","import { AddModelTypes, Client, SET_CLIENTS } from \"../../types\";\r\n\r\ntype addModelStateType = {\r\n  clients: Client[];\r\n};\r\n\r\nconst initialState = {\r\n  clients: [],\r\n} as addModelStateType;\r\n\r\nconst addModel = (state = initialState, action: AddModelTypes) => {\r\n  switch (action.type) {\r\n    case SET_CLIENTS:\r\n      return {\r\n        ...state,\r\n        clients: action.payload,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default addModel;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport models from \"./models\";\r\nimport schemes from \"./schemes\";\r\nimport wishes from \"./wishes\";\r\nimport purchase from \"./purchase\";\r\nimport production from \"./production\";\r\nimport products from \"./products\";\r\nimport steps from \"./steps\";\r\nimport budget from \"./budget\";\r\nimport addModel from \"./add_model\";\r\n\r\nconst root = combineReducers({\r\n  models,\r\n  schemes,\r\n  wishes,\r\n  purchase,\r\n  production,\r\n  products,\r\n  steps,\r\n  budget,\r\n  addModel,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof root>;\r\n\r\nexport default root;\r\n","import { createStore, applyMiddleware, compose, AnyAction } from \"redux\";\r\nimport root, { RootState } from \"./reducers\";\r\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\r\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(root, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunkDispatch = ThunkDispatch<RootState, any, AnyAction>;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\n\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { initialClients } from \"../redux/actions/add_model\";\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport { useStyles } from \"../styles\";\r\nimport { API_HOST, API_PATH } from \"../config\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst AddModel = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const { clients } = useAppSelector((state) => state.addModel);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(initialClients());\r\n  }, [dispatch]);\r\n\r\n  const [method, setMethod] = useState<string>(\"current_client\");\r\n\r\n  const handleChangeMethod = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMethod(e.target.value);\r\n  };\r\n\r\n  const [client, setClient] = useState<string>(\"\");\r\n\r\n  const handleChangeClient = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    setClient(e.target.value as string);\r\n  };\r\n\r\n  const [file, setFile] = useState<File>();\r\n\r\n  const handleChangeFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFile(e.target.files![0]);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const request = new FormData();\r\n    request.append(\"model_source\", method);\r\n\r\n    switch (method) {\r\n      case \"current_client\":\r\n        request.append(\"client_id\", client);\r\n        break;\r\n      case \"excel_file\":\r\n        if (file) {\r\n          request.append(\"file\", file);\r\n          break;\r\n        }\r\n        return;\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${API_HOST}/${API_PATH}/add_model/`,\r\n      data: request,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    }).finally(() => history.push(\"/\"));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Добавление моделей\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12}>\r\n            <FormControl component=\"fieldset\" required>\r\n              <FormLabel focused={false} component=\"legend\">\r\n                Выберите источник справочников новой модели:\r\n              </FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"Источник новой модели\"\r\n                name=\"model_source\"\r\n                value={method}\r\n                onChange={handleChangeMethod}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"current_client\"\r\n                  control={<Radio />}\r\n                  label=\"Из справочников существующего клиента\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"excel_file\"\r\n                  control={<Radio />}\r\n                  label=\"Загрузить новые справочники из Excel\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"manual\"\r\n                  disabled\r\n                  control={<Radio />}\r\n                  label=\"Ввести новые справочники вручную\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          {method === \"current_client\" ? (\r\n            <Grid item xs={12} sm={12}>\r\n              <FormControl\r\n                component=\"fieldset\"\r\n                color=\"secondary\"\r\n                className={classes.formControl}\r\n                required\r\n              >\r\n                <FormLabel\r\n                  focused={false}\r\n                  component=\"legend\"\r\n                  style={{ marginBottom: 10 }}\r\n                >\r\n                  Выберите клиента:\r\n                </FormLabel>\r\n                <InputLabel id=\"client_id\">Клиент</InputLabel>\r\n                <Select\r\n                  labelId=\"client_id\"\r\n                  id=\"client_id\"\r\n                  label=\"Клиент\"\r\n                  value={client}\r\n                  onChange={handleChangeClient}\r\n                >\r\n                  {clients.map(({ id, name }) => (\r\n                    <MenuItem key={id} value={id}>\r\n                      {name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          ) : null}\r\n\r\n          {method === \"excel_file\" ? (\r\n            <Grid item xs={12} sm={12}>\r\n              <Typography variant=\"body1\" component=\"span\">\r\n                Прикрепить файл:\r\n              </Typography>\r\n\r\n              <IconButton color=\"secondary\" component=\"label\">\r\n                <AttachFileIcon />\r\n                <input\r\n                  id=\"upload-file\"\r\n                  onChange={handleChangeFileUpload}\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  hidden\r\n                />\r\n              </IconButton>\r\n              <Typography variant=\"body2\" component=\"span\">\r\n                {file && file.name}\r\n              </Typography>\r\n            </Grid>\r\n          ) : null}\r\n\r\n          <Grid item xs={3} sm={6}>\r\n            <Button color=\"secondary\" type=\"submit\">\r\n              Отправить\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddModel;\r\n","import axios from \"axios\";\r\nimport { Action } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport { AddModelTypes, Client, SET_CLIENTS } from \"../../types\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nconst setClients = (clients: Client[]): AddModelTypes => ({\r\n  type: SET_CLIENTS,\r\n  payload: clients,\r\n});\r\n\r\nconst initialClients =\r\n  (): ThunkAction<void, RootState, unknown, Action<string>> => (dispatch) => {\r\n    axios\r\n      .get(`${API_HOST}/${API_PATH}/add_model/`)\r\n      .then(({ data }) => dispatch(setClients(data.clients as Client[])));\r\n  };\r\n\r\nexport { setClients, initialClients };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\nconst BI_URL =\r\n  \"https://app.powerbi.com/view?r=eyJrIjoiODYwYjBhOGMtZTIzYS00ZDJkLTk1MTEtNTk3Nzk4YTE2ZjUzIiwidCI6IjJhZTk1YzIwLWM2NzUtNGM0OC04OGQzLWYyNzZiNzYyYmY1MiIsImMiOjl9\";\r\n\r\nconst PowerBI = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(5));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"power-BI\">\r\n      <iframe\r\n        title=\"Power BI\"\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          height: \"90vh\",\r\n          border: \"none\",\r\n        }}\r\n        src={BI_URL}\r\n        allowFullScreen={true}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PowerBI;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\n\r\nimport {\r\n  SET_WISHES,\r\n  SET_WISHES_STATUS,\r\n  SAVE_WISHES,\r\n  WishesActionType,\r\n  SaveWishesPayloadTypes,\r\n  SetWishesPayload,\r\n  CLEAR_WISHES_REQUEST,\r\n  EXPAND_ALL_WISHES,\r\n  CLOSE_ALL_WISHES,\r\n  SET_WISHES_LOADED,\r\n} from \"../../types\";\r\n\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getWishes =\r\n  (id: number): ThunkAction<void, RootState, unknown, Action<string>> =>\r\n  (dispatch) => {\r\n    axios\r\n      .get(`${API_HOST}/${API_PATH}/${id}/wishes`)\r\n      .then(({ data: { products: wishes, scheme } }) =>\r\n        dispatch(setWishes({ wishes, scheme }))\r\n      )\r\n      .finally(() => dispatch(setWishesLoaded(true)));\r\n  };\r\n\r\nexport const setWishes = (wishes: SetWishesPayload): WishesActionType => ({\r\n  type: SET_WISHES,\r\n  payload: wishes,\r\n});\r\n\r\nexport const setWishesStatus = (args: string[]): WishesActionType => ({\r\n  type: SET_WISHES_STATUS,\r\n  payload: args,\r\n});\r\n\r\nexport const saveWishes = (obj: SaveWishesPayloadTypes): WishesActionType => ({\r\n  type: SAVE_WISHES,\r\n  payload: obj,\r\n});\r\n\r\nexport const clearWishesRequest: WishesActionType = {\r\n  type: CLEAR_WISHES_REQUEST,\r\n};\r\n\r\nexport const expandAllWishes: WishesActionType = {\r\n  type: EXPAND_ALL_WISHES,\r\n};\r\n\r\nexport const closeAllWishes: WishesActionType = {\r\n  type: CLOSE_ALL_WISHES,\r\n};\r\n\r\nexport const setWishesLoaded = (status: boolean): WishesActionType => ({\r\n  type: SET_WISHES_LOADED,\r\n  payload: status,\r\n});\r\n","import React from \"react\";\r\nimport { TableCell, TableRow } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { useStyles } from \"../styles\";\r\n\r\ntype LoaderProps = {\r\n  empty?: number;\r\n  content: number;\r\n  repeat: number;\r\n};\r\n\r\nconst Loader: React.FC<LoaderProps> = ({ empty = 0, content, repeat }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {[...Array(repeat)].map((_, index) => (\r\n        <TableRow key={index}>\r\n          {[...Array(empty)].map((_, index) => (\r\n            <TableCell key={index} className={classes.emptyCell}></TableCell>\r\n          ))}\r\n\r\n          {[...Array(content)].map((_, index) => (\r\n            <TableCell key={index}>\r\n              <Skeleton variant=\"text\" />\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { MatchProps, SaveWishesPayloadTypes, WishesItemTypes } from \"../types\";\r\n\r\nimport {\r\n  getWishes,\r\n  setWishesStatus,\r\n  saveWishes,\r\n  clearWishesRequest,\r\n  expandAllWishes,\r\n  closeAllWishes,\r\n  setWishesLoaded,\r\n} from \"../redux/actions/wishes\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport FunctionsIcon from \"@material-ui/icons/Functions\";\r\n\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStyles } from \"../styles\";\r\n\r\nimport axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../config\";\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst Wishes = ({ match }: MatchProps) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const id = +match.params.id;\r\n\r\n  useEffect(() => {\r\n    dispatch(clearWishesRequest);\r\n    dispatch(setStep(1));\r\n    dispatch(setWishesLoaded(false));\r\n    dispatch(getWishes(id));\r\n  }, [dispatch, id]);\r\n\r\n  const {\r\n    wishes: rows,\r\n    status,\r\n    scheme,\r\n    request,\r\n    isOpen,\r\n    loaded,\r\n  } = useAppSelector((state) => state.wishes);\r\n\r\n  const handleClick = (...args: string[]) => {\r\n    dispatch(setWishesStatus(args));\r\n  };\r\n\r\n  interface EditRowTypes {\r\n    [id: number]: {\r\n      0: string;\r\n      1: string;\r\n    };\r\n  }\r\n\r\n  const [editRow, setEditRow] = useState<EditRowTypes>({});\r\n\r\n  const handleClickEditTable = (id: number, value1: string, value2: string) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: { 0: value1, 1: value2 },\r\n    });\r\n  };\r\n\r\n  const handleChangeEditField = ({ value }: any, id: number, index: number) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: {\r\n        ...editRow[id],\r\n        [index]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleClickCancel = (id: number) => {\r\n    const newRows = { ...editRow };\r\n    delete newRows[id];\r\n    setEditRow(newRows);\r\n  };\r\n\r\n  const handleClickSave = (\r\n    id: number,\r\n    key1: string,\r\n    key2: string,\r\n    index: number\r\n  ) => {\r\n    const amount: string = editRow[id][0];\r\n    const price: string = editRow[id][1];\r\n    const obj: SaveWishesPayloadTypes = {\r\n      id,\r\n      key1,\r\n      key2,\r\n      amount,\r\n      price,\r\n      index,\r\n    };\r\n    dispatch(saveWishes(obj));\r\n    handleClickCancel(id);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleClickSkip = () => {\r\n    history.push(`/${id}/schemes/${scheme}/purchase/0`);\r\n  };\r\n\r\n  const handleExpandAll = () => {\r\n    if (!isOpen) {\r\n      dispatch(expandAllWishes);\r\n    } else {\r\n      dispatch(closeAllWishes);\r\n    }\r\n  };\r\n\r\n  const handleClickCalculate = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${API_HOST}/${API_PATH}/${id}/wishes/`,\r\n      data: request,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    }).then((res) => {\r\n      const schemeID: number = res.data[\"scheme_id\"];\r\n      history.push(`/${id}/schemes/${schemeID}/purchase/0`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <div className=\"left-side\">\r\n            <CustomTooltip title=\"Модели\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"back\"\r\n                onClick={handleClickBack}\r\n              >\r\n                <KeyboardBackspaceIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </div>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Ввод плана продаж готовой продукции\r\n          </Typography>\r\n          <div className=\"right-side\">\r\n            <CustomTooltip title=\"Продолжить без сохранения\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"not save\"\r\n                onClick={handleClickSkip}\r\n              >\r\n                <RedoIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n            <CustomTooltip title=\"Рассчитать линейно\">\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"calculate\"\r\n                onClick={handleClickCalculate}\r\n              >\r\n                <FunctionsIcon />\r\n              </IconButton>\r\n            </CustomTooltip>\r\n          </div>\r\n        </Toolbar>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell>\r\n                <CustomTooltip\r\n                  title={!isOpen ? \"Раскрыть список\" : \"Скрыть список\"}\r\n                >\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"expand all\"\r\n                    onClick={handleExpandAll}\r\n                    size=\"small\"\r\n                  >\r\n                    {isOpen ? <ExpandMoreIcon /> : <ChevronRightIcon />}\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </TableCell>\r\n              <TableCell className={classes.emptyCell}></TableCell>\r\n              <TableCell>№</TableCell>\r\n              <TableCell>Наименование позиции</TableCell>\r\n              <TableCell style={{ minWidth: 150 }}>Объем, т</TableCell>\r\n              <TableCell style={{ minWidth: 150 }}>\r\n                Цена реализации, руб/кг\r\n              </TableCell>\r\n              <TableCell align=\"center\">Действия</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loaded ? (\r\n              <Loader empty={2} content={5} repeat={10} />\r\n            ) : (\r\n              <>\r\n                {Object.keys(rows).map((key1) => {\r\n                  return (\r\n                    <React.Fragment key={key1}>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          colSpan={4}\r\n                          onClick={() => handleClick(key1)}\r\n                        >\r\n                          <IconButton\r\n                            style={{ marginRight: 16 }}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          >\r\n                            {status[key1].status ? (\r\n                              <ExpandMoreIcon />\r\n                            ) : (\r\n                              <ChevronRightIcon />\r\n                            )}\r\n                          </IconButton>\r\n                          <span>\r\n                            Код: <span style={{ fontWeight: 400 }}>{key1}</span>\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }} align=\"left\">\r\n                          {+rows[key1].amount.toFixed(8)}\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }} align=\"left\">\r\n                          {+rows[key1].averagePrice.toFixed(8)}\r\n                        </TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                      {status[key1].status &&\r\n                        Object.keys(rows[key1].values).map((key2) => (\r\n                          <React.Fragment key={key2}>\r\n                            <TableRow>\r\n                              <TableCell />\r\n                              <TableCell\r\n                                colSpan={3}\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                                onClick={() => handleClick(key1, key2)}\r\n                              >\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  color=\"secondary\"\r\n                                  style={{ marginRight: 16 }}\r\n                                >\r\n                                  {status[key1][key2].status ? (\r\n                                    <ExpandMoreIcon />\r\n                                  ) : (\r\n                                    <ChevronRightIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                                <span>\r\n                                  Код:{\" \"}\r\n                                  <span style={{ fontWeight: 400 }}>\r\n                                    {key2}\r\n                                  </span>\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {+rows[key1].values[key2].amount.toFixed(8)}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {\r\n                                  +rows[key1].values[key2].averagePrice.toFixed(\r\n                                    8\r\n                                  )\r\n                                }\r\n                              </TableCell>\r\n                              <TableCell></TableCell>\r\n                            </TableRow>\r\n                            {status[key1][key2].status &&\r\n                              rows[key1].values[key2].values.map(\r\n                                (row: WishesItemTypes, index: number) => {\r\n                                  return (\r\n                                    <TableRow key={`${key2}_${index}`}>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell>{row.code}</TableCell>\r\n                                      <TableCell>{row.name}</TableCell>\r\n                                      {editRow.hasOwnProperty(row.id) ? (\r\n                                        <>\r\n                                          <TableCell>\r\n                                            <NumberFormat\r\n                                              value={editRow[row.id][0]}\r\n                                              onValueChange={({ value: v }) =>\r\n                                                handleChangeEditField(\r\n                                                  { value: v },\r\n                                                  row.id,\r\n                                                  0\r\n                                                )\r\n                                              }\r\n                                              thousandSeparator={\" \"}\r\n                                              customInput={TextField}\r\n                                              InputProps={{\r\n                                                color: \"secondary\",\r\n                                                size: \"small\",\r\n                                                className: classes.input,\r\n                                              }}\r\n                                            />\r\n                                          </TableCell>\r\n                                          <TableCell>\r\n                                            <NumberFormat\r\n                                              value={editRow[row.id][1]}\r\n                                              onValueChange={({ value: v }) =>\r\n                                                handleChangeEditField(\r\n                                                  { value: v },\r\n                                                  row.id,\r\n                                                  1\r\n                                                )\r\n                                              }\r\n                                              thousandSeparator={\" \"}\r\n                                              suffix={\"\\u20BD\"}\r\n                                              customInput={TextField}\r\n                                              InputProps={{\r\n                                                color: \"secondary\",\r\n                                                size: \"small\",\r\n                                                className: classes.input,\r\n                                              }}\r\n                                            />\r\n                                          </TableCell>\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <TableCell\r\n                                            style={{\r\n                                              color: \"rgba(0, 0, 0, 0.5)\",\r\n                                            }}\r\n                                          >\r\n                                            {+row.amount}\r\n                                          </TableCell>\r\n                                          <TableCell\r\n                                            style={{\r\n                                              color: \"rgba(0, 0, 0, 0.5)\",\r\n                                            }}\r\n                                          >\r\n                                            {row.price}\r\n                                          </TableCell>\r\n                                        </>\r\n                                      )}\r\n                                      {!editRow.hasOwnProperty(row.id) ? (\r\n                                        <TableCell align=\"center\">\r\n                                          <IconButton\r\n                                            onClick={() =>\r\n                                              handleClickEditTable(\r\n                                                row.id,\r\n                                                row.amount,\r\n                                                \"\" + row.price\r\n                                              )\r\n                                            }\r\n                                            size=\"small\"\r\n                                            color=\"secondary\"\r\n                                          >\r\n                                            <EditIcon />\r\n                                          </IconButton>\r\n                                        </TableCell>\r\n                                      ) : (\r\n                                        <TableCell align=\"center\">\r\n                                          <IconButton\r\n                                            onClick={() =>\r\n                                              handleClickSave(\r\n                                                row.id,\r\n                                                key1,\r\n                                                key2,\r\n                                                index\r\n                                              )\r\n                                            }\r\n                                            size=\"small\"\r\n                                            color=\"secondary\"\r\n                                          >\r\n                                            <SaveIcon />\r\n                                          </IconButton>\r\n                                          <IconButton\r\n                                            onClick={() =>\r\n                                              handleClickCancel(row.id)\r\n                                            }\r\n                                            size=\"small\"\r\n                                            color=\"secondary\"\r\n                                          >\r\n                                            <CancelIcon />\r\n                                          </IconButton>\r\n                                        </TableCell>\r\n                                      )}\r\n                                    </TableRow>\r\n                                  );\r\n                                }\r\n                              )}\r\n                          </React.Fragment>\r\n                        ))}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Wishes;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport {\r\n  SET_PURCHASES,\r\n  SAVE_PURCHASES,\r\n  CLEAR_PURCHASE_REQUEST,\r\n  PurchaseActionType,\r\n  PurchaseData,\r\n  SavePurchasePayloadTypes,\r\n  SET_PURCHASE_LOADED,\r\n} from \"../../types\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getPurchases =\r\n  (\r\n    model: string,\r\n    scheme: string = \"\",\r\n    changed: \"0\" | \"1\" = \"0\"\r\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\r\n  (dispatch) => {\r\n    axios\r\n      .get(\r\n        `${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/purchase/${changed}/`\r\n      )\r\n      .then(({ data: { products: purchase } }) =>\r\n        dispatch(setPurchases(purchase))\r\n      )\r\n      .finally(() => dispatch(setPurchaseLoaded(true)));\r\n  };\r\n\r\nexport const setPurchases = (purchase: PurchaseData[]): PurchaseActionType => ({\r\n  type: SET_PURCHASES,\r\n  payload: purchase,\r\n});\r\n\r\nexport const savePurchase = (\r\n  obj: SavePurchasePayloadTypes\r\n): PurchaseActionType => ({\r\n  type: SAVE_PURCHASES,\r\n  payload: obj,\r\n});\r\n\r\nexport const clearPurchaseRequest: PurchaseActionType = {\r\n  type: CLEAR_PURCHASE_REQUEST,\r\n};\r\n\r\nexport const setPurchaseLoaded = (status: boolean): PurchaseActionType => ({\r\n  type: SET_PURCHASE_LOADED,\r\n  payload: status,\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport {\r\n  getPurchases,\r\n  savePurchase,\r\n  setPurchaseLoaded,\r\n} from \"../redux/actions/purchase\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\nimport { PurchaseData, MatchProps, SavePurchasePayloadTypes } from \"../types\";\r\n\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Typography,\r\n  Toolbar,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n  Clear as ClearIcon,\r\n  Done as DoneIcon,\r\n  Functions as FunctionsIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { useStyles } from \"../styles\";\r\nimport axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../config\";\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport Loader from \"../components/Loader\";\r\n\r\ntype ColumnsTypes = {\r\n  id: keyof PurchaseData;\r\n  label: string;\r\n  align?: \"right\";\r\n};\r\n\r\nconst columns: ColumnsTypes[] = [\r\n  { id: \"name\", label: \"Наименование\" },\r\n  { id: \"amount\", label: \"Закупка, т\" },\r\n  { id: \"price\", label: \"Цена, руб/кг\" },\r\n];\r\n\r\nconst Purchases = ({ match }: MatchProps) => {\r\n  const classes = useStyles();\r\n\r\n  // load purchases\r\n  const dispatch = useDispatch();\r\n  const { id: model, id2: scheme, changed } = match.params;\r\n\r\n  const {\r\n    purchase: rows,\r\n    request,\r\n    loaded,\r\n  } = useAppSelector((state) => state.purchase);\r\n\r\n  useEffect(() => {\r\n    dispatch(setPurchaseLoaded(false));\r\n    dispatch(setStep(changed !== \"0\" ? 6 : 2));\r\n    dispatch(getPurchases(model, scheme, changed));\r\n  }, [dispatch, model, scheme, changed]);\r\n\r\n  // edit rows\r\n\r\n  interface EditRowTypes {\r\n    [id: number]: string;\r\n  }\r\n\r\n  const [editRow, setEditRow] = useState<EditRowTypes>({});\r\n\r\n  const handleClickEditRow = (id: number, value: string) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  const handleChangeEditField = ({ value }: any, id: number) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  const handleClickCancel = (id: number) => {\r\n    const newRows = { ...editRow };\r\n    delete newRows[id];\r\n    setEditRow(newRows);\r\n  };\r\n\r\n  const handleClickSave = (id: number, index: number) => {\r\n    const obj: SavePurchasePayloadTypes = {\r\n      index,\r\n      price: +editRow[id],\r\n    };\r\n    dispatch(savePurchase(obj));\r\n    handleClickCancel(id);\r\n  };\r\n\r\n  const PurchaceToolbar = () => {\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    const handleClickCalculate = () => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/purchase/${changed}/`,\r\n        data: request,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n    };\r\n\r\n    const handleClickRefuse = () => {\r\n      const URL =\r\n        changed !== \"0\"\r\n          ? `/${model}/schemes/${scheme}/wishes`\r\n          : `/${model}/wishes`;\r\n      history.push(URL);\r\n    };\r\n\r\n    const handleClickAccept = () => {\r\n      history.push(\r\n        `/${model}/schemes/${scheme}/production${changed !== \"0\" ? \"/1\" : \"/0\"}`\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Toolbar className={classes.toolBar}>\r\n        <div className=\"left-side\">\r\n          <CustomTooltip title=\"Отказаться\">\r\n            <IconButton\r\n              color=\"secondary\"\r\n              aria-label=\"refuse\"\r\n              onClick={handleClickRefuse}\r\n            >\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          Корректировка плана закупок\r\n        </Typography>\r\n        <div className=\"right-side\">\r\n          <CustomTooltip title=\"Рассчитать линейно\">\r\n            <IconButton\r\n              color=\"secondary\"\r\n              aria-label=\"calculate\"\r\n              onClick={handleClickCalculate}\r\n            >\r\n              <FunctionsIcon />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Принять\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"accept\"\r\n              onClick={handleClickAccept}\r\n            >\r\n              <DoneIcon />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <PurchaceToolbar />\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n              <TableCell align=\"center\">Действия</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loaded ? (\r\n              <Loader content={4} repeat={10} />\r\n            ) : (\r\n              <>\r\n                {rows.map(({ id, name, amount, price }, index) => {\r\n                  return (\r\n                    <TableRow key={id}>\r\n                      <TableCell>{name}</TableCell>\r\n                      <TableCell>{amount}</TableCell>\r\n                      {editRow.hasOwnProperty(id) ? (\r\n                        <TableCell>\r\n                          <NumberFormat\r\n                            value={editRow[id]}\r\n                            thousandSeparator={\" \"}\r\n                            customInput={TextField}\r\n                            suffix={\"\\u20BD\"}\r\n                            InputProps={{\r\n                              color: \"secondary\",\r\n                              size: \"small\",\r\n                              className: classes.input,\r\n                            }}\r\n                            onValueChange={({ value: v }) =>\r\n                              handleChangeEditField({ value: v }, id)\r\n                            }\r\n                          />\r\n                        </TableCell>\r\n                      ) : (\r\n                        <TableCell>{price}</TableCell>\r\n                      )}\r\n                      {editRow.hasOwnProperty(id) ? (\r\n                        <TableCell align=\"center\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleClickSave(id, index)}\r\n                          >\r\n                            <SaveIcon />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleClickCancel(id)}\r\n                          >\r\n                            <CancelIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      ) : (\r\n                        <TableCell align=\"center\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleClickEditRow(id, \"\" + price)}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      )}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Purchases;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\n\r\nimport {\r\n  SET_PRODUCTION,\r\n  SET_PRODUCTION_STATUS,\r\n  ProductionActionType,\r\n  ProductionData,\r\n  EXPAND_ALL_PRODUCTION,\r\n  CLOSE_ALL_PRODUCTION,\r\n  SET_PRODUCTION_LOADED,\r\n} from \"../../types\";\r\n\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getProduction =\r\n  (\r\n    model: string,\r\n    scheme: string = \"\",\r\n    changed: \"0\" | \"1\" = \"0\"\r\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\r\n  (dispatch) => {\r\n    axios\r\n      .get(\r\n        `${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/production/${changed}`\r\n      )\r\n      .then(({ data: { products: production } }) =>\r\n        dispatch(setProduction(production))\r\n      )\r\n      .finally(() => dispatch(setProductionLoaded(true)));\r\n  };\r\n\r\nexport const setProduction = (\r\n  production: ProductionData[]\r\n): ProductionActionType => ({\r\n  type: SET_PRODUCTION,\r\n  payload: production,\r\n});\r\n\r\nexport const setProductionStatus = (args: string[]): ProductionActionType => ({\r\n  type: SET_PRODUCTION_STATUS,\r\n  payload: args,\r\n});\r\n\r\nexport const expandAllProduction: ProductionActionType = {\r\n  type: EXPAND_ALL_PRODUCTION,\r\n};\r\n\r\nexport const closeAllProduction: ProductionActionType = {\r\n  type: CLOSE_ALL_PRODUCTION,\r\n};\r\n\r\nexport const setProductionLoaded = (status: boolean): ProductionActionType => ({\r\n  type: SET_PRODUCTION_LOADED,\r\n  payload: status,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MatchProps, ProductionItemTypes } from \"../types\";\r\n\r\nimport {\r\n  closeAllProduction,\r\n  expandAllProduction,\r\n  getProduction,\r\n  setProductionLoaded,\r\n  setProductionStatus,\r\n} from \"../redux/actions/production\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Clear as ClearIcon,\r\n  Done as DoneIcon,\r\n  ChevronRight as ChevronRightIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { useStyles } from \"../styles\";\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport Loader from \"../components/Loader\";\r\n\r\ntype ToolbarPropsTypes = {\r\n  model: string;\r\n  scheme: string | undefined;\r\n  changed: string | undefined;\r\n};\r\n\r\nconst ProductionToolbar = ({ model, scheme, changed }: ToolbarPropsTypes) => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickRefuse = () => {\r\n    const URL =\r\n      changed !== \"0\"\r\n        ? `/${model}/schemes/${scheme}/wishes`\r\n        : `/${model}/wishes`;\r\n    history.push(URL);\r\n  };\r\n\r\n  const handleClickAccept = () => {\r\n    const URL =\r\n      changed !== \"0\"\r\n        ? `/${model}/schemes/${scheme}/budget`\r\n        : `/${model}/schemes/${scheme}/launch`;\r\n    history.push(URL);\r\n  };\r\n\r\n  return (\r\n    <Toolbar className={classes.toolBar}>\r\n      <div className=\"left-side\">\r\n        <CustomTooltip title=\"Отказаться\">\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"refuse\"\r\n            onClick={handleClickRefuse}\r\n          >\r\n            <ClearIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </div>\r\n      <Typography variant=\"h6\" component=\"h2\">\r\n        Корректировка плана производства\r\n      </Typography>\r\n      <div className=\"right-side\">\r\n        <CustomTooltip title=\"Принять\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"accept\"\r\n            onClick={handleClickAccept}\r\n          >\r\n            <DoneIcon />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst Production = ({ match }: MatchProps) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const { id: model, id2: scheme, changed } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(setProductionLoaded(false));\r\n    dispatch(setStep(changed !== \"0\" ? 6 : 3));\r\n    dispatch(getProduction(model, scheme, changed));\r\n  }, [dispatch, model, scheme, changed]);\r\n\r\n  const {\r\n    production: rows,\r\n    status,\r\n    isOpen,\r\n    loaded,\r\n  } = useAppSelector((state) => state.production);\r\n\r\n  const handleClick = (...args: string[]) => {\r\n    dispatch(setProductionStatus(args));\r\n  };\r\n\r\n  const handleExpandAll = () => {\r\n    if (!isOpen) {\r\n      dispatch(expandAllProduction);\r\n    } else {\r\n      dispatch(closeAllProduction);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <ProductionToolbar model={model} scheme={scheme} changed={changed} />\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell>\r\n                <CustomTooltip\r\n                  title={!isOpen ? \"Раскрыть список\" : \"Скрыть список\"}\r\n                >\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"expand all\"\r\n                    onClick={handleExpandAll}\r\n                    size=\"small\"\r\n                  >\r\n                    {isOpen ? <ExpandMoreIcon /> : <ChevronRightIcon />}\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </TableCell>\r\n              <TableCell className={classes.emptyCell}></TableCell>\r\n              <TableCell style={{ width: 100 }}>№</TableCell>\r\n              <TableCell style={{ width: 400 }}>Операция</TableCell>\r\n              <TableCell style={{ minWidth: 150 }}>Объем, т</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loaded ? (\r\n              <Loader empty={2} content={3} repeat={10} />\r\n            ) : (\r\n              <>\r\n                {Object.keys(rows).map((key1) => {\r\n                  return (\r\n                    <React.Fragment key={key1}>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          colSpan={4}\r\n                          onClick={() => handleClick(key1)}\r\n                        >\r\n                          <IconButton\r\n                            style={{ marginRight: 16 }}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                          >\r\n                            {status[key1].status ? (\r\n                              <ExpandMoreIcon />\r\n                            ) : (\r\n                              <ChevronRightIcon />\r\n                            )}\r\n                          </IconButton>\r\n                          <span>\r\n                            Код: <span style={{ fontWeight: 400 }}>{key1}</span>\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }} align=\"left\">\r\n                          {+rows[key1].amount.toFixed(8)}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      {status[key1].status &&\r\n                        Object.keys(rows[key1].values).map((key2) => (\r\n                          <React.Fragment key={key2}>\r\n                            <TableRow>\r\n                              <TableCell />\r\n                              <TableCell\r\n                                colSpan={3}\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                                onClick={() => handleClick(key1, key2)}\r\n                              >\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  color=\"secondary\"\r\n                                  style={{ marginRight: 16 }}\r\n                                >\r\n                                  {status[key1][key2].status ? (\r\n                                    <ExpandMoreIcon />\r\n                                  ) : (\r\n                                    <ChevronRightIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                                <span>\r\n                                  Код:{\" \"}\r\n                                  <span style={{ fontWeight: 400 }}>\r\n                                    {key2}\r\n                                  </span>\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {+rows[key1].values[key2].amount.toFixed(8)}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                            {status[key1][key2].status &&\r\n                              rows[key1].values[key2].values.map(\r\n                                (row: ProductionItemTypes, index: number) => {\r\n                                  return (\r\n                                    <TableRow key={`${key2}_${index}`}>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell>{row.code}</TableCell>\r\n                                      <TableCell>{row.name}</TableCell>\r\n\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {+row.amount}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                }\r\n                              )}\r\n                          </React.Fragment>\r\n                        ))}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Production;\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStyles } from \"../styles\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport { setStep } from \"../redux/actions/steps\";\r\n\r\nimport { MatchProps } from \"../types\";\r\n\r\nimport axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../config\";\r\n\r\ninterface NumberFormatCustomProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { value: string } }) => void;\r\n  name: string;\r\n}\r\n\r\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator={\" \"}\r\n    />\r\n  );\r\n}\r\n\r\nconst Launch = ({ match }: MatchProps) => {\r\n  const { id: model, id2: scheme } = match.params;\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(4));\r\n  }, [dispatch]);\r\n\r\n  const formatter = new Intl.NumberFormat(\"ru\");\r\n\r\n  const [intValueField, setIntValueField] = useState({\r\n    value: \"100\",\r\n    formattedValue: formatter.format(100),\r\n  });\r\n\r\n  const onChangeIntegerField = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const intRegex = /^[0-9]*$/;\r\n    const value = e.target.value.replace(/\\s/g, \"\");\r\n    if (intRegex.test(value)) {\r\n      setIntValueField({\r\n        value,\r\n        formattedValue: value ? formatter.format(+value) : \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const [interval, setInterval] = useState(\"10\");\r\n\r\n  const handleChangeInterval = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setInterval(e.target.value);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const [loaded, setLoaded] = useState<boolean>(true);\r\n\r\n  const handleClickRun = () => {\r\n    const request = new FormData();\r\n    request.append(\"count\", intValueField.value);\r\n    request.append(\"spread\", interval);\r\n\r\n    setLoaded(false);\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/launch/`,\r\n      data: request,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .finally(() => setLoaded(true))\r\n      .then((res) => {\r\n        const success: boolean = res.data[\"success\"];\r\n\r\n        if (success) {\r\n          history.push(`/${model}/schemes/${scheme}/wishes`);\r\n        } else {\r\n          alert(\"Что пошло не так!\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Запуск процесса моделирования\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"count\"\r\n            name=\"count\"\r\n            label=\"Количество отбираемых решений\"\r\n            value={intValueField.formattedValue}\r\n            onChange={(e) => onChangeIntegerField(e)}\r\n            color=\"secondary\"\r\n            required\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"interval\"\r\n            name=\"interval\"\r\n            defaultValue={\"10\"}\r\n            value={interval}\r\n            onChange={handleChangeInterval}\r\n            color=\"secondary\"\r\n            label=\"Интервал изменения объема продукции (+/- процентов)\"\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom as any,\r\n            }}\r\n            required\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} sm={6}>\r\n          <Button color=\"secondary\" onClick={handleClickRun}>\r\n            {!loaded && (\r\n              <CircularProgress\r\n                color=\"secondary\"\r\n                size={20}\r\n                style={{ marginRight: 10 }}\r\n              />\r\n            )}\r\n            Запустить моделирование\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Launch;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport {\r\n  SET_PRODUCTS,\r\n  SAVE_PRODUCTS,\r\n  ProductsActionType,\r\n  ProductsData,\r\n  PayloadSaveProductsAction,\r\n  CLEAR_PRODUCTS_REQUEST,\r\n  SET_PRODUCTS_LOADED,\r\n} from \"../../types\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getProducts =\r\n  (\r\n    model: string,\r\n    scheme: string = \"\"\r\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\r\n  (dispatch) => {\r\n    axios\r\n      .get(`${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/wishes`)\r\n      .then(({ data: { products } }) => dispatch(setProducts(products)))\r\n      .finally(() => dispatch(setProductsLoaded(true)));\r\n  };\r\n\r\nexport const setProducts = (products: ProductsData[]): ProductsActionType => ({\r\n  type: SET_PRODUCTS,\r\n  payload: products,\r\n});\r\n\r\nexport const saveProducts = (\r\n  obj: PayloadSaveProductsAction\r\n): ProductsActionType => ({\r\n  type: SAVE_PRODUCTS,\r\n  payload: obj,\r\n});\r\n\r\nexport const clearProductsRequest: ProductsActionType = {\r\n  type: CLEAR_PRODUCTS_REQUEST,\r\n};\r\n\r\nexport const setProductsLoaded = (status: boolean): ProductsActionType => ({\r\n  type: SET_PRODUCTS_LOADED,\r\n  payload: status,\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  clearProductsRequest,\r\n  getProducts,\r\n  saveProducts,\r\n  setProductsLoaded,\r\n} from \"../redux/actions/products\";\r\nimport { setStep } from \"../redux/actions/steps\";\r\nimport { MatchProps, ProductsData } from \"../types\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport { useStyles } from \"../styles\";\r\n\r\nimport { CustomTooltip } from \"../components\";\r\n\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Typography,\r\n  Toolbar,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Edit as EditIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardBackspace as KeyboardBackspaceIcon,\r\n  Functions as FunctionsIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../config\";\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport Loader from \"../components/Loader\";\r\n\r\ntype ColumnsTypes = {\r\n  id: keyof ProductsData;\r\n  label: string;\r\n  align?: \"right\";\r\n};\r\n\r\nconst columns: ColumnsTypes[] = [\r\n  {\r\n    id: \"code\",\r\n    label: \"Код\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    label: \"Наименование позиции\",\r\n  },\r\n  {\r\n    id: \"amount\",\r\n    label: \"Объем, т\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    label: \"Цена, руб\\u002fкг\",\r\n  },\r\n  {\r\n    id: \"curr_rent\",\r\n    label: \"Рент-сть, %\",\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"last_volume\",\r\n    label: \"Объем, т\",\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"last_price\",\r\n    label: \"Цена,\\u00a0руб\\u002fкг\",\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"last_rent\",\r\n    label: \"Рент-сть,\\u00a0%\",\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nconst EditTable = ({ match }: MatchProps) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { id: model, id2: scheme } = match.params;\r\n\r\n  const {\r\n    products: rows,\r\n    request,\r\n    loaded,\r\n  } = useAppSelector((state) => state.products);\r\n\r\n  useEffect(() => {\r\n    dispatch(setProductsLoaded(false));\r\n    dispatch(clearProductsRequest);\r\n    dispatch(setStep(6));\r\n    dispatch(getProducts(model, scheme));\r\n  }, [dispatch, model, scheme]);\r\n\r\n  interface EditRowTypes {\r\n    [id: number]: {\r\n      amount: number;\r\n      price: number;\r\n    };\r\n  }\r\n\r\n  const [editRow, setEditRow] = useState<EditRowTypes>({});\r\n\r\n  const handleClickEditTable = (id: number, amount: number, price: number) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: { price, amount },\r\n    });\r\n  };\r\n\r\n  const handleChangeEditField = (\r\n    { value }: any,\r\n    id: number,\r\n    target: string\r\n  ) => {\r\n    setEditRow({\r\n      ...editRow,\r\n      [id]: {\r\n        ...editRow[id],\r\n        [target]: +value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleClickCancel = (id: number) => {\r\n    const newRows = { ...editRow };\r\n    delete newRows[id];\r\n    setEditRow(newRows);\r\n  };\r\n\r\n  const handleClickSave = (id: number, index: number) => {\r\n    dispatch(saveProducts({ index, values: editRow[id] }));\r\n    handleClickCancel(id);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickBack = () => {\r\n    history.push(`/${model}/schemes/${scheme}/launch`);\r\n  };\r\n\r\n  const handleClickCalc = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: `${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/wishes/`,\r\n      data: request,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    }).then((res) => {\r\n      const schemeID: number = res.data[\"scheme_id\"];\r\n      history.push(`/${model}/schemes/${schemeID}/purchase/1`);\r\n    });\r\n  };\r\n\r\n  const handleClickNotSave = () => {\r\n    history.push(`/${model}/schemes/${scheme}/budget`);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Toolbar className={classes.toolBar}>\r\n        <div className=\"left-side\">\r\n          <CustomTooltip title=\"Расчёт\">\r\n            <IconButton\r\n              color=\"secondary\"\r\n              aria-label=\"back\"\r\n              onClick={handleClickBack}\r\n            >\r\n              <KeyboardBackspaceIcon />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          Ввод плана продаж готовой продукции\r\n        </Typography>\r\n        <div className=\"right-side\">\r\n          <CustomTooltip title=\"Продолжить без сохранения\">\r\n            <IconButton\r\n              color=\"secondary\"\r\n              aria-label=\"not save\"\r\n              onClick={handleClickNotSave}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n          <CustomTooltip title=\"Рассчитать линейно\">\r\n            <IconButton\r\n              color=\"secondary\"\r\n              aria-label=\"calculate\"\r\n              onClick={handleClickCalc}\r\n            >\r\n              <FunctionsIcon />\r\n            </IconButton>\r\n          </CustomTooltip>\r\n        </div>\r\n      </Toolbar>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell colSpan={2} />\r\n              <TableCell colSpan={3} align=\"center\">\r\n                Корректируемое решение\r\n              </TableCell>\r\n              <TableCell colSpan={3} align=\"center\">\r\n                План продаж\r\n              </TableCell>\r\n              <TableCell />\r\n            </TableRow>\r\n            <TableRow className={classes.header}>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n              <TableCell align=\"center\">Действия</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loaded ? (\r\n              <Loader content={9} repeat={10} />\r\n            ) : (\r\n              <>\r\n                {rows.map(\r\n                  (\r\n                    {\r\n                      id,\r\n                      code,\r\n                      name,\r\n                      last_volume,\r\n                      last_price,\r\n                      last_rent,\r\n                      amount,\r\n                      price,\r\n                      curr_rent,\r\n                    },\r\n                    index\r\n                  ) => {\r\n                    const isEditRow = editRow.hasOwnProperty(id);\r\n\r\n                    return (\r\n                      <TableRow key={id}>\r\n                        <TableCell>{code}</TableCell>\r\n                        <TableCell>{name}</TableCell>\r\n                        <TableCell>\r\n                          {isEditRow ? (\r\n                            <NumberFormat\r\n                              value={editRow[id].amount}\r\n                              onValueChange={({ value: v }) =>\r\n                                handleChangeEditField(\r\n                                  { value: v },\r\n                                  id,\r\n                                  \"amount\"\r\n                                )\r\n                              }\r\n                              thousandSeparator={\" \"}\r\n                              customInput={TextField}\r\n                              InputProps={{\r\n                                color: \"secondary\",\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            +amount\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {isEditRow ? (\r\n                            <NumberFormat\r\n                              value={editRow[id].price}\r\n                              onValueChange={({ value: v }) =>\r\n                                handleChangeEditField({ value: v }, id, \"price\")\r\n                              }\r\n                              thousandSeparator={\" \"}\r\n                              suffix={\"\\u20BD\"}\r\n                              customInput={TextField}\r\n                              InputProps={{\r\n                                color: \"secondary\",\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            +price.toFixed(2)\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>{+last_rent.toFixed(2)}</TableCell>\r\n                        <TableCell>{+last_volume}</TableCell>\r\n                        <TableCell>{+last_price.toFixed(2)}</TableCell>\r\n                        <TableCell>{+curr_rent.toFixed(2)}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {isEditRow ? (\r\n                            <>\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                color=\"secondary\"\r\n                                onClick={() => handleClickSave(id, index)}\r\n                              >\r\n                                <SaveIcon />\r\n                              </IconButton>\r\n                              <IconButton\r\n                                onClick={() => handleClickCancel(id)}\r\n                                size=\"small\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                <CancelIcon />\r\n                              </IconButton>\r\n                            </>\r\n                          ) : (\r\n                            <IconButton\r\n                              color=\"secondary\"\r\n                              size=\"small\"\r\n                              onClick={() =>\r\n                                handleClickEditTable(id, +amount, price)\r\n                              }\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default EditTable;\r\n","import axios from \"axios\";\r\nimport { API_HOST, API_PATH } from \"../../config\";\r\nimport {\r\n  SET_BLOCKS_SELL,\r\n  SET_BLOCKS_SELL_STATUS,\r\n  SET_BLOCKS_ADD,\r\n  BudgetActionTypes,\r\n  BlocksData,\r\n  WishesData,\r\n  EXPAND_ALL_SELL,\r\n  CLOSE_ALL_SELL,\r\n} from \"../../types\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nexport const getBlocksSell =\r\n  (\r\n    model: string,\r\n    scheme: string = \"\"\r\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\r\n  (dispatch) => {\r\n    axios\r\n      .get(`${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/blocks_sell/0`)\r\n      .then(({ data: { products: blocksSell } }) =>\r\n        dispatch(setBlockSell(blocksSell))\r\n      );\r\n  };\r\n\r\nconst setBlockSell = (blocksSell: WishesData[]): BudgetActionTypes => ({\r\n  type: SET_BLOCKS_SELL,\r\n  payload: blocksSell,\r\n});\r\n\r\nexport const setBlockSellStatus = (args: string[]): BudgetActionTypes => ({\r\n  type: SET_BLOCKS_SELL_STATUS,\r\n  payload: args,\r\n});\r\n\r\nexport const getBlocksAdd =\r\n  (\r\n    model: string,\r\n    scheme: string = \"\"\r\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\r\n  (dispatch) => {\r\n    axios\r\n      .get(`${API_HOST}/${API_PATH}/${model}/schemes/${scheme}/blocks_add/0`)\r\n      .then(({ data: { products: blocksAdd } }) =>\r\n        dispatch(setBlockAdd(blocksAdd))\r\n      );\r\n  };\r\n\r\nconst setBlockAdd = (blocksAdd: BlocksData[]): BudgetActionTypes => ({\r\n  type: SET_BLOCKS_ADD,\r\n  payload: blocksAdd,\r\n});\r\n\r\nexport const expandAllSell: BudgetActionTypes = {\r\n  type: EXPAND_ALL_SELL,\r\n};\r\n\r\nexport const closeAllSell: BudgetActionTypes = {\r\n  type: CLOSE_ALL_SELL,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  ChevronRight as ChevronRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { CustomTooltip } from \"../../../components\";\r\n\r\nimport {\r\n  closeAllSell,\r\n  expandAllSell,\r\n  getBlocksSell,\r\n  setBlockSellStatus,\r\n} from \"../../../redux/actions/budget\";\r\n\r\nimport {\r\n  closeAllWishes,\r\n  expandAllWishes,\r\n  getWishes,\r\n  setWishesLoaded,\r\n  setWishesStatus,\r\n} from \"../../../redux/actions/wishes\";\r\n\r\nimport { RootState } from \"../../../redux/reducers\";\r\nimport { AppThunkDispatch } from \"../../../redux/store\";\r\nimport { BlocksData, WishesItemTypes } from \"../../../types\";\r\nimport { useStyles } from \"../../../styles\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\ntype ColumnsWishesTypes = {\r\n  id: keyof BlocksData;\r\n  label: string;\r\n  align?: \"right\";\r\n};\r\n\r\nconst columnsWishes: ColumnsWishesTypes[] = [\r\n  { id: \"code\", label: \"№\" },\r\n  { id: \"name\", label: \"Наименование позиции\" },\r\n  { id: \"amount\", label: \"Объем, т\" },\r\n  { id: \"price\", label: \"Цена реализации, руб/кг\" },\r\n];\r\n\r\ntype BudgetWishesProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & { model: string; scheme: string };\r\n\r\nconst BudgetWishes: React.FC<BudgetWishesProps> = ({\r\n  model,\r\n  scheme,\r\n  wishes,\r\n  wishesStatus,\r\n  isOpenWishes,\r\n  sell,\r\n  sellStatus,\r\n  isOpenSell,\r\n  setBlockSellStatus,\r\n  setWishesStatus,\r\n  expandAllWishes,\r\n  expandAllSell,\r\n  closeAllWishes,\r\n  closeAllSell,\r\n  getWishes,\r\n  getBlocksSell,\r\n  loaded,\r\n  setWishesLoaded,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setWishesLoaded(false);\r\n    getWishes(+model);\r\n    getBlocksSell(model, scheme);\r\n  }, [model, scheme, getWishes, getBlocksSell, setWishesLoaded]);\r\n\r\n  const handleClickArrowSells = (...args: string[]) => {\r\n    setBlockSellStatus(args);\r\n  };\r\n\r\n  const handleClickArrowWishes = (...args: string[]) => {\r\n    setWishesStatus(args);\r\n  };\r\n\r\n  const handleExpandAllWishes = () => {\r\n    if (!isOpenWishes && !isOpenSell) {\r\n      expandAllWishes();\r\n      expandAllSell();\r\n    } else {\r\n      closeAllWishes();\r\n      closeAllSell();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.budgetTables}>\r\n      <TableContainer>\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            План продаж\r\n          </Typography>\r\n        </Toolbar>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell>\r\n                <CustomTooltip\r\n                  title={\r\n                    !isOpenWishes && !isOpenSell\r\n                      ? \"Раскрыть список\"\r\n                      : \"Скрыть список\"\r\n                  }\r\n                >\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"expand all\"\r\n                    onClick={handleExpandAllWishes}\r\n                    size=\"small\"\r\n                  >\r\n                    {isOpenWishes && isOpenSell ? (\r\n                      <ExpandMoreIcon />\r\n                    ) : (\r\n                      <ChevronRightIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </TableCell>\r\n              <TableCell className={classes.emptyCell} />\r\n              {columnsWishes.map((column) => (\r\n                <TableCell key={column.id} align={column.align}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loaded ? (\r\n              <Loader empty={2} content={5} repeat={10} />\r\n            ) : (\r\n              <>\r\n                {Object.keys(wishes).map((key1) => {\r\n                  return (\r\n                    <React.Fragment key={key1}>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          colSpan={4}\r\n                        >\r\n                          <IconButton\r\n                            style={{ marginRight: 16 }}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={() => handleClickArrowWishes(key1)}\r\n                          >\r\n                            {wishesStatus[key1].status ? (\r\n                              <ExpandMoreIcon />\r\n                            ) : (\r\n                              <ChevronRightIcon />\r\n                            )}\r\n                          </IconButton>\r\n                          <span>\r\n                            Код: <span style={{ fontWeight: 400 }}>{key1}</span>\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }}>\r\n                          {+wishes[key1].amount.toFixed(2)}\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }}>\r\n                          {+wishes[key1].averagePrice.toFixed(2)}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      {wishesStatus[key1].status &&\r\n                        Object.keys(wishes[key1].values).map((key2) => (\r\n                          <React.Fragment key={key2}>\r\n                            <TableRow>\r\n                              <TableCell />\r\n                              <TableCell\r\n                                colSpan={3}\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  color=\"secondary\"\r\n                                  style={{ marginRight: 16 }}\r\n                                  onClick={() =>\r\n                                    handleClickArrowWishes(key1, key2)\r\n                                  }\r\n                                >\r\n                                  {wishesStatus[key1][key2].status ? (\r\n                                    <ExpandMoreIcon />\r\n                                  ) : (\r\n                                    <ChevronRightIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                                <span>\r\n                                  Код:{\" \"}\r\n                                  <span style={{ fontWeight: 400 }}>\r\n                                    {key2}\r\n                                  </span>\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {+wishes[key1].values[key2].amount.toFixed(2)}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {\r\n                                  +wishes[key1].values[\r\n                                    key2\r\n                                  ].averagePrice.toFixed(2)\r\n                                }\r\n                              </TableCell>\r\n                            </TableRow>\r\n                            {wishesStatus[key1][key2].status &&\r\n                              wishes[key1].values[key2].values.map(\r\n                                (row: WishesItemTypes, index: number) => {\r\n                                  return (\r\n                                    <TableRow key={`${key2}_${index}`}>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell>{row.code}</TableCell>\r\n                                      <TableCell>{row.name}</TableCell>\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {+row.amount}\r\n                                      </TableCell>\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {row.price}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                }\r\n                              )}\r\n                          </React.Fragment>\r\n                        ))}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n                {Object.keys(sell).map((key1) => {\r\n                  return (\r\n                    <React.Fragment key={key1}>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          colSpan={4}\r\n                        >\r\n                          <IconButton\r\n                            style={{ marginRight: 16 }}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={() => handleClickArrowSells(key1)}\r\n                          >\r\n                            {sellStatus[key1].status ? (\r\n                              <ExpandMoreIcon />\r\n                            ) : (\r\n                              <ChevronRightIcon />\r\n                            )}\r\n                          </IconButton>\r\n                          <span>\r\n                            Код: <span style={{ fontWeight: 400 }}>{key1}</span>\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }}>\r\n                          {+sell[key1].amount.toFixed(2)}\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }}>\r\n                          {+sell[key1].averagePrice.toFixed(2)}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      {sellStatus[key1].status &&\r\n                        Object.keys(sell[key1].values).map((key2) => (\r\n                          <React.Fragment key={key2}>\r\n                            <TableRow>\r\n                              <TableCell />\r\n                              <TableCell\r\n                                colSpan={3}\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  color=\"secondary\"\r\n                                  style={{ marginRight: 16 }}\r\n                                  onClick={() =>\r\n                                    handleClickArrowSells(key1, key2)\r\n                                  }\r\n                                >\r\n                                  {sellStatus[key1][key2].status ? (\r\n                                    <ExpandMoreIcon />\r\n                                  ) : (\r\n                                    <ChevronRightIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                                <span>\r\n                                  Код:{\" \"}\r\n                                  <span style={{ fontWeight: 400 }}>\r\n                                    {key2}\r\n                                  </span>\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {+sell[key1].values[key2].amount.toFixed(2)}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {\r\n                                  +sell[key1].values[key2].averagePrice.toFixed(\r\n                                    2\r\n                                  )\r\n                                }\r\n                              </TableCell>\r\n                            </TableRow>\r\n                            {sellStatus[key1][key2].status &&\r\n                              sell[key1].values[key2].values.map(\r\n                                (row: WishesItemTypes, index: number) => {\r\n                                  return (\r\n                                    <TableRow key={`${key2}_${index}`}>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell>{row.code}</TableCell>\r\n                                      <TableCell>{row.name}</TableCell>\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {+row.amount}\r\n                                      </TableCell>\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {row.price}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                }\r\n                              )}\r\n                          </React.Fragment>\r\n                        ))}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  wishes: state.wishes.wishes,\r\n  wishesStatus: state.wishes.status,\r\n  isOpenWishes: state.wishes.isOpen,\r\n  loaded: state.wishes.loaded,\r\n  isOpenSell: state.budget.blocks.sell.isOpen,\r\n  sell: state.budget.blocks.sell.values,\r\n  sellStatus: state.budget.blocks.sell.status,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppThunkDispatch) => ({\r\n  setBlockSellStatus: (args: string[]) => dispatch(setBlockSellStatus(args)),\r\n  setWishesStatus: (args: string[]) => dispatch(setWishesStatus(args)),\r\n  expandAllWishes: () => dispatch(expandAllWishes),\r\n  closeAllWishes: () => dispatch(closeAllWishes),\r\n  setWishesLoaded: (status: boolean) => dispatch(setWishesLoaded(status)),\r\n  expandAllSell: () => dispatch(expandAllSell),\r\n  closeAllSell: () => dispatch(closeAllSell),\r\n  getWishes: (model: number) => dispatch(getWishes(model)),\r\n  getBlocksSell: (model: string, sheme: string) =>\r\n    dispatch(getBlocksSell(model, sheme)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetWishes);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  ChevronRight as ChevronRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { CustomTooltip } from \"../../../components\";\r\nimport { useStyles } from \"../../../styles\";\r\nimport { RootState } from \"../../../redux/reducers\";\r\nimport { AppThunkDispatch } from \"../../../redux/store\";\r\nimport {\r\n  closeAllProduction,\r\n  expandAllProduction,\r\n  getProduction,\r\n  setProductionLoaded,\r\n  setProductionStatus,\r\n} from \"../../../redux/actions/production\";\r\nimport { connect } from \"react-redux\";\r\nimport { ProductionItemTypes } from \"../../../types\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\ntype BudgetProductionProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & { model: string; scheme: string };\r\n\r\nconst BudgetProduction: React.FC<BudgetProductionProps> = ({\r\n  model,\r\n  scheme,\r\n  production,\r\n  productionStatus,\r\n  isOpen,\r\n  setProductionStatus,\r\n  expandAllProduction,\r\n  closeAllProduction,\r\n  getProduction,\r\n  loaded,\r\n  setProductionLoaded,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setProductionLoaded(false);\r\n    getProduction(model, scheme);\r\n  }, [model, scheme, getProduction, setProductionLoaded]);\r\n\r\n  const handleClickArrowProduction = (...args: string[]) => {\r\n    setProductionStatus(args);\r\n  };\r\n\r\n  const handleExpandAllProduction = () => {\r\n    if (!isOpen) {\r\n      expandAllProduction();\r\n    } else {\r\n      closeAllProduction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.budgetTables}>\r\n      <TableContainer>\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            План производства\r\n          </Typography>\r\n        </Toolbar>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              <TableCell>\r\n                <CustomTooltip\r\n                  title={!isOpen ? \"Раскрыть список\" : \"Скрыть список\"}\r\n                >\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"expand all\"\r\n                    onClick={handleExpandAllProduction}\r\n                    size=\"small\"\r\n                  >\r\n                    {isOpen ? <ExpandMoreIcon /> : <ChevronRightIcon />}\r\n                  </IconButton>\r\n                </CustomTooltip>\r\n              </TableCell>\r\n              <TableCell className={classes.emptyCell}></TableCell>\r\n              <TableCell style={{ width: 100 }}>№</TableCell>\r\n              <TableCell style={{ width: 400 }}>Операция</TableCell>\r\n              <TableCell style={{ minWidth: 150 }}>Объем, т</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loaded ? (\r\n              <Loader empty={2} content={3} repeat={10} />\r\n            ) : (\r\n              <>\r\n                {Object.keys(production).map((key1) => {\r\n                  return (\r\n                    <React.Fragment key={key1}>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          colSpan={4}\r\n                        >\r\n                          <IconButton\r\n                            style={{ marginRight: 16 }}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={() => handleClickArrowProduction(key1)}\r\n                          >\r\n                            {productionStatus[key1].status ? (\r\n                              <ExpandMoreIcon />\r\n                            ) : (\r\n                              <ChevronRightIcon />\r\n                            )}\r\n                          </IconButton>\r\n                          <span>\r\n                            Код: <span style={{ fontWeight: 400 }}>{key1}</span>\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell style={{ fontWeight: 700 }} align=\"left\">\r\n                          {+production[key1].amount.toFixed(2)}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      {productionStatus[key1].status &&\r\n                        Object.keys(production[key1].values).map((key2) => (\r\n                          <React.Fragment key={key2}>\r\n                            <TableRow>\r\n                              <TableCell />\r\n                              <TableCell\r\n                                colSpan={3}\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  color=\"secondary\"\r\n                                  style={{ marginRight: 16 }}\r\n                                  onClick={() =>\r\n                                    handleClickArrowProduction(key1, key2)\r\n                                  }\r\n                                >\r\n                                  {productionStatus[key1][key2].status ? (\r\n                                    <ExpandMoreIcon />\r\n                                  ) : (\r\n                                    <ChevronRightIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                                <span>\r\n                                  Код:{\" \"}\r\n                                  <span style={{ fontWeight: 400 }}>\r\n                                    {key2}\r\n                                  </span>\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {\r\n                                  +production[key1].values[key2].amount.toFixed(\r\n                                    2\r\n                                  )\r\n                                }\r\n                              </TableCell>\r\n                            </TableRow>\r\n                            {productionStatus[key1][key2].status &&\r\n                              production[key1].values[key2].values.map(\r\n                                (row: ProductionItemTypes, index: number) => {\r\n                                  return (\r\n                                    <TableRow key={`${key2}_${index}`}>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell></TableCell>\r\n                                      <TableCell>{row.code}</TableCell>\r\n                                      <TableCell>{row.name}</TableCell>\r\n\r\n                                      <TableCell\r\n                                        style={{\r\n                                          color: \"rgba(0, 0, 0, 0.5)\",\r\n                                        }}\r\n                                      >\r\n                                        {+row.amount}\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                }\r\n                              )}\r\n                          </React.Fragment>\r\n                        ))}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  production: state.production.production,\r\n  productionStatus: state.production.status,\r\n  isOpen: state.production.isOpen,\r\n  loaded: state.production.loaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppThunkDispatch) => ({\r\n  setProductionStatus: (args: string[]) => dispatch(setProductionStatus(args)),\r\n  expandAllProduction: () => dispatch(expandAllProduction),\r\n  closeAllProduction: () => dispatch(closeAllProduction),\r\n  getProduction: (model: string, scheme: string) =>\r\n    dispatch(getProduction(model, scheme, \"1\")),\r\n  setProductionLoaded: (status: boolean) =>\r\n    dispatch(setProductionLoaded(status)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetProduction);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"../../../styles\";\r\nimport { PurchaseData } from \"../../../types\";\r\nimport { RootState } from \"../../../redux/reducers\";\r\nimport {\r\n  getPurchases,\r\n  setPurchaseLoaded,\r\n} from \"../../../redux/actions/purchase\";\r\nimport { getBlocksAdd } from \"../../../redux/actions/budget\";\r\nimport { AppThunkDispatch } from \"../../../redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\ntype ColumnsPurchaseTypes = {\r\n  id: keyof PurchaseData;\r\n  label: string;\r\n  align?: \"right\";\r\n};\r\n\r\nconst columnsPurchase: ColumnsPurchaseTypes[] = [\r\n  { id: \"name\", label: \"Наименование\" },\r\n  { id: \"amount\", label: \"Закупка, т\" },\r\n  { id: \"price\", label: \"Цена, руб/кг\" },\r\n];\r\n\r\ntype BudgetPurchaseProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps> & { model: string; scheme: string };\r\n\r\nconst BudgetPurchase: React.FC<BudgetPurchaseProps> = ({\r\n  model,\r\n  scheme,\r\n  purchase,\r\n  add,\r\n  getPurchases,\r\n  getBlocksAdd,\r\n  loaded,\r\n  setPurchaseLoaded,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setPurchaseLoaded(false);\r\n    getPurchases(model, scheme);\r\n    getBlocksAdd(model, scheme);\r\n  }, [model, scheme, getPurchases, getBlocksAdd, setPurchaseLoaded]);\r\n\r\n  return (\r\n    <Paper className={classes.budgetTables}>\r\n      <TableContainer>\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            План закупок\r\n          </Typography>\r\n        </Toolbar>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow className={classes.header}>\r\n              {columnsPurchase.map((column) => (\r\n                <TableCell key={column.id} align={column.align}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loaded ? (\r\n              <Loader content={4} repeat={10} />\r\n            ) : (\r\n              <>\r\n                {purchase.map(({ id, name, amount, price }) => {\r\n                  return (\r\n                    <TableRow key={id}>\r\n                      <TableCell>{name}</TableCell>\r\n                      <TableCell>{amount}</TableCell>\r\n                      <TableCell>{price}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                {add.map(({ id, name, amount, price }) => {\r\n                  return (\r\n                    <TableRow key={id}>\r\n                      <TableCell>{name}</TableCell>\r\n                      <TableCell>{amount}</TableCell>\r\n                      <TableCell>{price}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  purchase: state.purchase.purchase,\r\n  loaded: state.purchase.loaded,\r\n  add: state.budget.blocks.add,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppThunkDispatch) => ({\r\n  getPurchases: (model: string, scheme: string) =>\r\n    dispatch(getPurchases(model, scheme, \"1\")),\r\n  getBlocksAdd: (model: string, sheme: string) =>\r\n    dispatch(getBlocksAdd(model, sheme)),\r\n  setPurchaseLoaded: (status: boolean) => dispatch(setPurchaseLoaded(status)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetPurchase);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { expandAllSell } from \"../../redux/actions/budget\";\r\nimport { setStep } from \"../../redux/actions/steps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { Print as PrintIcon } from \"@material-ui/icons\";\r\n\r\nimport { expandAllWishes } from \"../../redux/actions/wishes\";\r\nimport { expandAllProduction } from \"../../redux/actions/production\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport BudgetWishes from \"./components/BudgetWishes\";\r\nimport BudgetProduction from \"./components/BudgetProduction\";\r\nimport BudgetPurchase from \"./components/BudgetPurchase\";\r\nimport { useStyles } from \"../../styles\";\r\n\r\ninterface MatchParams {\r\n  id: string;\r\n  id2: string;\r\n}\r\n\r\ninterface MatchProps extends RouteComponentProps<MatchParams> {}\r\n\r\nconst Budget = ({ match }: MatchProps) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const { id: model, id2: scheme } = match.params;\r\n\r\n  const printRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(setStep(7));\r\n  }, [dispatch]);\r\n\r\n  const [print, setPrint] = useState<boolean>(false);\r\n\r\n  const printBudget = useReactToPrint({\r\n    content: () => printRef.current,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (print) {\r\n      printBudget && printBudget();\r\n      setPrint(false);\r\n    }\r\n  }, [print, printBudget]);\r\n\r\n  const handleClickPrint = () => {\r\n    dispatch(expandAllWishes);\r\n    dispatch(expandAllSell);\r\n    dispatch(expandAllProduction);\r\n    setPrint(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div ref={printRef}>\r\n        <BudgetWishes model={model} scheme={scheme} />\r\n        <BudgetProduction model={model} scheme={scheme} />\r\n        <BudgetPurchase model={model} scheme={scheme} />\r\n      </div>\r\n      <div className={classes.budgetTables}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<PrintIcon />}\r\n          onClick={handleClickPrint}\r\n        >\r\n          Распечатать\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Budget;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport {\n  Models,\n  Wishes,\n  PowerBI,\n  EditTable,\n  Purchase,\n  Production,\n  Launch,\n  Budget,\n  AddModel,\n} from \"./pages\";\nimport { CustomizedSteppers } from \"./components\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n// import { ruRU } from \"@material-ui/core/locale\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#4caf50\",\n    },\n    secondary: {\n      main: \"rgb(161, 52, 60)\",\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CustomizedSteppers />\n      <Switch>\n        <Route exact path=\"/\" component={Models} />\n        <Route exact path=\"/add_model\" component={AddModel} />\n        <Route exact path=\"/power_bi\" component={PowerBI} />\n        <Route exact path=\"/:id/wishes\" component={Wishes} />\n        <Route\n          exact\n          path=\"/:id/schemes/:id2/purchase/:changed\"\n          component={Purchase}\n        />\n        <Route\n          exact\n          path=\"/:id/schemes/:id2/production/:changed\"\n          component={Production}\n        />\n        <Route exact path=\"/:id/schemes/:id2/launch\" component={Launch} />\n        <Route exact path=\"/:id/schemes/:id2/wishes\" component={EditTable} />\n        <Route exact path=\"/:id/schemes/:id2/budget\" component={Budget} />\n      </Switch>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/coursework-vector\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}